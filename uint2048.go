// Code generated by 'gen'. DO NOT EDIT.

package fixed

import (
	"encoding/binary"
	"fmt"
	"math"
	"math/bits"
	"sync"
)

// Uint2048 is an unsigned, 2048-bit integer.
//
// It can be compared for equality with ==.
type Uint2048 struct {
	u0, u1, u2, u3, u4, u5, u6, u7, u8, u9, u10, u11, u12, u13, u14, u15, u16, u17, u18, u19, u20, u21, u22, u23, u24, u25, u26, u27, u28, u29, u30, u31 uint64
}

var _ Uint[Uint2048] = Uint2048{}

// U2048 returns x as a Uint2048.
func U2048(x uint64) Uint2048 {
	return Uint2048{u0: x}
}

func u2048(lo, hi Uint1024) Uint2048 {
	return Uint2048{
		lo.u0,
		lo.u1,
		lo.u2,
		lo.u3,
		lo.u4,
		lo.u5,
		lo.u6,
		lo.u7,
		lo.u8,
		lo.u9,
		lo.u10,
		lo.u11,
		lo.u12,
		lo.u13,
		lo.u14,
		lo.u15,
		hi.u0,
		hi.u1,
		hi.u2,
		hi.u3,
		hi.u4,
		hi.u5,
		hi.u6,
		hi.u7,
		hi.u8,
		hi.u9,
		hi.u10,
		hi.u11,
		hi.u12,
		hi.u13,
		hi.u14,
		hi.u15,
	}
}

func (Uint2048) max() Uint2048 {
	return Uint2048{
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
		math.MaxUint64,
	}
}

func (x Uint2048) low() Uint1024 {
	return Uint1024{
		x.u0,
		x.u1,
		x.u2,
		x.u3,
		x.u4,
		x.u5,
		x.u6,
		x.u7,
		x.u8,
		x.u9,
		x.u10,
		x.u11,
		x.u12,
		x.u13,
		x.u14,
		x.u15}
}

func (x Uint2048) high() Uint1024 {
	return Uint1024{
		x.u16,
		x.u17,
		x.u18,
		x.u19,
		x.u20,
		x.u21,
		x.u22,
		x.u23,
		x.u24,
		x.u25,
		x.u26,
		x.u27,
		x.u28,
		x.u29,
		x.u30,
		x.u31}
}

func (x Uint2048) uint8() uint8 {
	return uint8(x.u0)
}

// Bytes encodes x as a little-endian integer.
func (x Uint2048) Bytes(b *[256]byte) {
	binary.LittleEndian.PutUint64(b[0:], x.u0)
	binary.LittleEndian.PutUint64(b[8:], x.u1)
	binary.LittleEndian.PutUint64(b[16:], x.u2)
	binary.LittleEndian.PutUint64(b[24:], x.u3)
	binary.LittleEndian.PutUint64(b[32:], x.u4)
	binary.LittleEndian.PutUint64(b[40:], x.u5)
	binary.LittleEndian.PutUint64(b[48:], x.u6)
	binary.LittleEndian.PutUint64(b[56:], x.u7)
	binary.LittleEndian.PutUint64(b[64:], x.u8)
	binary.LittleEndian.PutUint64(b[72:], x.u9)
	binary.LittleEndian.PutUint64(b[80:], x.u10)
	binary.LittleEndian.PutUint64(b[88:], x.u11)
	binary.LittleEndian.PutUint64(b[96:], x.u12)
	binary.LittleEndian.PutUint64(b[104:], x.u13)
	binary.LittleEndian.PutUint64(b[112:], x.u14)
	binary.LittleEndian.PutUint64(b[120:], x.u15)
	binary.LittleEndian.PutUint64(b[128:], x.u16)
	binary.LittleEndian.PutUint64(b[136:], x.u17)
	binary.LittleEndian.PutUint64(b[144:], x.u18)
	binary.LittleEndian.PutUint64(b[152:], x.u19)
	binary.LittleEndian.PutUint64(b[160:], x.u20)
	binary.LittleEndian.PutUint64(b[168:], x.u21)
	binary.LittleEndian.PutUint64(b[176:], x.u22)
	binary.LittleEndian.PutUint64(b[184:], x.u23)
	binary.LittleEndian.PutUint64(b[192:], x.u24)
	binary.LittleEndian.PutUint64(b[200:], x.u25)
	binary.LittleEndian.PutUint64(b[208:], x.u26)
	binary.LittleEndian.PutUint64(b[216:], x.u27)
	binary.LittleEndian.PutUint64(b[224:], x.u28)
	binary.LittleEndian.PutUint64(b[232:], x.u29)
	binary.LittleEndian.PutUint64(b[240:], x.u30)
	binary.LittleEndian.PutUint64(b[248:], x.u31)

}

// SetBytes sets x to the encoded little-endian integer b.
func (x *Uint2048) SetBytes(b []byte) error {
	if len(b) != 256 {
		return fmt.Errorf("fixed: invalid length: %d", len(b))
	}
	x.u0 = binary.LittleEndian.Uint64(b[0:])
	x.u1 = binary.LittleEndian.Uint64(b[8:])
	x.u2 = binary.LittleEndian.Uint64(b[16:])
	x.u3 = binary.LittleEndian.Uint64(b[24:])
	x.u4 = binary.LittleEndian.Uint64(b[32:])
	x.u5 = binary.LittleEndian.Uint64(b[40:])
	x.u6 = binary.LittleEndian.Uint64(b[48:])
	x.u7 = binary.LittleEndian.Uint64(b[56:])
	x.u8 = binary.LittleEndian.Uint64(b[64:])
	x.u9 = binary.LittleEndian.Uint64(b[72:])
	x.u10 = binary.LittleEndian.Uint64(b[80:])
	x.u11 = binary.LittleEndian.Uint64(b[88:])
	x.u12 = binary.LittleEndian.Uint64(b[96:])
	x.u13 = binary.LittleEndian.Uint64(b[104:])
	x.u14 = binary.LittleEndian.Uint64(b[112:])
	x.u15 = binary.LittleEndian.Uint64(b[120:])
	x.u16 = binary.LittleEndian.Uint64(b[128:])
	x.u17 = binary.LittleEndian.Uint64(b[136:])
	x.u18 = binary.LittleEndian.Uint64(b[144:])
	x.u19 = binary.LittleEndian.Uint64(b[152:])
	x.u20 = binary.LittleEndian.Uint64(b[160:])
	x.u21 = binary.LittleEndian.Uint64(b[168:])
	x.u22 = binary.LittleEndian.Uint64(b[176:])
	x.u23 = binary.LittleEndian.Uint64(b[184:])
	x.u24 = binary.LittleEndian.Uint64(b[192:])
	x.u25 = binary.LittleEndian.Uint64(b[200:])
	x.u26 = binary.LittleEndian.Uint64(b[208:])
	x.u27 = binary.LittleEndian.Uint64(b[216:])
	x.u28 = binary.LittleEndian.Uint64(b[224:])
	x.u29 = binary.LittleEndian.Uint64(b[232:])
	x.u30 = binary.LittleEndian.Uint64(b[240:])
	x.u31 = binary.LittleEndian.Uint64(b[248:])
	return nil
}

// Size returns the width of the integer in bits.
func (Uint2048) Size() int {
	return 2048
}

// BitLen returns the number of bits required to represent x.
func (x Uint2048) BitLen() int {
	switch {
	case x.u31 != 0:
		return 1984 + bits.Len64(x.u31)
	case x.u30 != 0:
		return 1920 + bits.Len64(x.u30)
	case x.u29 != 0:
		return 1856 + bits.Len64(x.u29)
	case x.u28 != 0:
		return 1792 + bits.Len64(x.u28)
	case x.u27 != 0:
		return 1728 + bits.Len64(x.u27)
	case x.u26 != 0:
		return 1664 + bits.Len64(x.u26)
	case x.u25 != 0:
		return 1600 + bits.Len64(x.u25)
	case x.u24 != 0:
		return 1536 + bits.Len64(x.u24)
	case x.u23 != 0:
		return 1472 + bits.Len64(x.u23)
	case x.u22 != 0:
		return 1408 + bits.Len64(x.u22)
	case x.u21 != 0:
		return 1344 + bits.Len64(x.u21)
	case x.u20 != 0:
		return 1280 + bits.Len64(x.u20)
	case x.u19 != 0:
		return 1216 + bits.Len64(x.u19)
	case x.u18 != 0:
		return 1152 + bits.Len64(x.u18)
	case x.u17 != 0:
		return 1088 + bits.Len64(x.u17)
	case x.u16 != 0:
		return 1024 + bits.Len64(x.u16)
	case x.u15 != 0:
		return 960 + bits.Len64(x.u15)
	case x.u14 != 0:
		return 896 + bits.Len64(x.u14)
	case x.u13 != 0:
		return 832 + bits.Len64(x.u13)
	case x.u12 != 0:
		return 768 + bits.Len64(x.u12)
	case x.u11 != 0:
		return 704 + bits.Len64(x.u11)
	case x.u10 != 0:
		return 640 + bits.Len64(x.u10)
	case x.u9 != 0:
		return 576 + bits.Len64(x.u9)
	case x.u8 != 0:
		return 512 + bits.Len64(x.u8)
	case x.u7 != 0:
		return 448 + bits.Len64(x.u7)
	case x.u6 != 0:
		return 384 + bits.Len64(x.u6)
	case x.u5 != 0:
		return 320 + bits.Len64(x.u5)
	case x.u4 != 0:
		return 256 + bits.Len64(x.u4)
	case x.u3 != 0:
		return 192 + bits.Len64(x.u3)
	case x.u2 != 0:
		return 128 + bits.Len64(x.u2)
	case x.u1 != 0:
		return 64 + bits.Len64(x.u1)
	default:
		return bits.Len64(x.u0)
	}
}

// LeadingZeros returns the number of leading zeros in x.
func (x Uint2048) LeadingZeros() int {
	return 2048 - x.BitLen()
}

// IsZero is shorthand for x == Uint2048{}.
func (x Uint2048) IsZero() bool {
	return x == Uint2048{}
}

// Cmp compares x and y and returns
//
//   - +1 if x > y
//   - 0 if x == y
//   - -1 if x < y
func (x Uint2048) Cmp(y Uint2048) int {
	switch {
	case x.u31 != y.u31:
		return cmp(x.u31, y.u31)
	case x.u30 != y.u30:
		return cmp(x.u30, y.u30)
	case x.u29 != y.u29:
		return cmp(x.u29, y.u29)
	case x.u28 != y.u28:
		return cmp(x.u28, y.u28)
	case x.u27 != y.u27:
		return cmp(x.u27, y.u27)
	case x.u26 != y.u26:
		return cmp(x.u26, y.u26)
	case x.u25 != y.u25:
		return cmp(x.u25, y.u25)
	case x.u24 != y.u24:
		return cmp(x.u24, y.u24)
	case x.u23 != y.u23:
		return cmp(x.u23, y.u23)
	case x.u22 != y.u22:
		return cmp(x.u22, y.u22)
	case x.u21 != y.u21:
		return cmp(x.u21, y.u21)
	case x.u20 != y.u20:
		return cmp(x.u20, y.u20)
	case x.u19 != y.u19:
		return cmp(x.u19, y.u19)
	case x.u18 != y.u18:
		return cmp(x.u18, y.u18)
	case x.u17 != y.u17:
		return cmp(x.u17, y.u17)
	case x.u16 != y.u16:
		return cmp(x.u16, y.u16)
	case x.u15 != y.u15:
		return cmp(x.u15, y.u15)
	case x.u14 != y.u14:
		return cmp(x.u14, y.u14)
	case x.u13 != y.u13:
		return cmp(x.u13, y.u13)
	case x.u12 != y.u12:
		return cmp(x.u12, y.u12)
	case x.u11 != y.u11:
		return cmp(x.u11, y.u11)
	case x.u10 != y.u10:
		return cmp(x.u10, y.u10)
	case x.u9 != y.u9:
		return cmp(x.u9, y.u9)
	case x.u8 != y.u8:
		return cmp(x.u8, y.u8)
	case x.u7 != y.u7:
		return cmp(x.u7, y.u7)
	case x.u6 != y.u6:
		return cmp(x.u6, y.u6)
	case x.u5 != y.u5:
		return cmp(x.u5, y.u5)
	case x.u4 != y.u4:
		return cmp(x.u4, y.u4)
	case x.u3 != y.u3:
		return cmp(x.u3, y.u3)
	case x.u2 != y.u2:
		return cmp(x.u2, y.u2)
	case x.u1 != y.u1:
		return cmp(x.u1, y.u1)
	default:
		return cmp(x.u0, y.u0)
	}
}

// cmp64 compares x and y and returns
//
//   - +1 if x > y
//   - 0 if x == y
//   - -1 if x < y
func (x Uint2048) cmp64(y uint64) int {
	v := x
	v.u0 = 0
	if !v.IsZero() {
		return +1
	}
	return cmp(x.u0, y)
}

// Equal reports whether x == y.
//
// In general, prefer the == operator to using this method.
func (x Uint2048) Equal(y Uint2048) bool {
	return x == y
}

// And returns x&y.
func (x Uint2048) And(y Uint2048) Uint2048 {
	return Uint2048{
		x.u0 & y.u0,
		x.u1 & y.u1,
		x.u2 & y.u2,
		x.u3 & y.u3,
		x.u4 & y.u4,
		x.u5 & y.u5,
		x.u6 & y.u6,
		x.u7 & y.u7,
		x.u8 & y.u8,
		x.u9 & y.u9,
		x.u10 & y.u10,
		x.u11 & y.u11,
		x.u12 & y.u12,
		x.u13 & y.u13,
		x.u14 & y.u14,
		x.u15 & y.u15,
		x.u16 & y.u16,
		x.u17 & y.u17,
		x.u18 & y.u18,
		x.u19 & y.u19,
		x.u20 & y.u20,
		x.u21 & y.u21,
		x.u22 & y.u22,
		x.u23 & y.u23,
		x.u24 & y.u24,
		x.u25 & y.u25,
		x.u26 & y.u26,
		x.u27 & y.u27,
		x.u28 & y.u28,
		x.u29 & y.u29,
		x.u30 & y.u30,
		x.u31 & y.u31,
	}
}

// Or returns x|y.
func (x Uint2048) Or(y Uint2048) Uint2048 {
	return Uint2048{
		x.u0 | y.u0,
		x.u1 | y.u1,
		x.u2 | y.u2,
		x.u3 | y.u3,
		x.u4 | y.u4,
		x.u5 | y.u5,
		x.u6 | y.u6,
		x.u7 | y.u7,
		x.u8 | y.u8,
		x.u9 | y.u9,
		x.u10 | y.u10,
		x.u11 | y.u11,
		x.u12 | y.u12,
		x.u13 | y.u13,
		x.u14 | y.u14,
		x.u15 | y.u15,
		x.u16 | y.u16,
		x.u17 | y.u17,
		x.u18 | y.u18,
		x.u19 | y.u19,
		x.u20 | y.u20,
		x.u21 | y.u21,
		x.u22 | y.u22,
		x.u23 | y.u23,
		x.u24 | y.u24,
		x.u25 | y.u25,
		x.u26 | y.u26,
		x.u27 | y.u27,
		x.u28 | y.u28,
		x.u29 | y.u29,
		x.u30 | y.u30,
		x.u31 | y.u31,
	}
}

// orLsh64 returns x | y<<s.
func (x Uint2048) orLsh64(y uint64, s uint) Uint2048 {
	return x.Or(Uint2048{u0: y}.Lsh(s))
}

// Xor returns x^y.
func (x Uint2048) Xor(y Uint2048) Uint2048 {
	return Uint2048{
		x.u0 ^ y.u0,
		x.u1 ^ y.u1,
		x.u2 ^ y.u2,
		x.u3 ^ y.u3,
		x.u4 ^ y.u4,
		x.u5 ^ y.u5,
		x.u6 ^ y.u6,
		x.u7 ^ y.u7,
		x.u8 ^ y.u8,
		x.u9 ^ y.u9,
		x.u10 ^ y.u10,
		x.u11 ^ y.u11,
		x.u12 ^ y.u12,
		x.u13 ^ y.u13,
		x.u14 ^ y.u14,
		x.u15 ^ y.u15,
		x.u16 ^ y.u16,
		x.u17 ^ y.u17,
		x.u18 ^ y.u18,
		x.u19 ^ y.u19,
		x.u20 ^ y.u20,
		x.u21 ^ y.u21,
		x.u22 ^ y.u22,
		x.u23 ^ y.u23,
		x.u24 ^ y.u24,
		x.u25 ^ y.u25,
		x.u26 ^ y.u26,
		x.u27 ^ y.u27,
		x.u28 ^ y.u28,
		x.u29 ^ y.u29,
		x.u30 ^ y.u30,
		x.u31 ^ y.u31,
	}
}

// Lsh returns x<<n.
func (x Uint2048) Lsh(n uint) Uint2048 {
	switch {
	case n > 1984:
		s := n - 1984
		return Uint2048{
			u31: x.u0 << s,
		}
	case n > 1920:
		s := n - 1920
		ŝ := 64 - s
		return Uint2048{
			u30: x.u0 << s,
			u31: x.u1<<s | x.u0>>ŝ,
		}
	case n > 1856:
		s := n - 1856
		ŝ := 64 - s
		return Uint2048{
			u29: x.u0 << s,
			u30: x.u1<<s | x.u0>>ŝ,
			u31: x.u2<<s | x.u1>>ŝ,
		}
	case n > 1792:
		s := n - 1792
		ŝ := 64 - s
		return Uint2048{
			u28: x.u0 << s,
			u29: x.u1<<s | x.u0>>ŝ,
			u30: x.u2<<s | x.u1>>ŝ,
			u31: x.u3<<s | x.u2>>ŝ,
		}
	case n > 1728:
		s := n - 1728
		ŝ := 64 - s
		return Uint2048{
			u27: x.u0 << s,
			u28: x.u1<<s | x.u0>>ŝ,
			u29: x.u2<<s | x.u1>>ŝ,
			u30: x.u3<<s | x.u2>>ŝ,
			u31: x.u4<<s | x.u3>>ŝ,
		}
	case n > 1664:
		s := n - 1664
		ŝ := 64 - s
		return Uint2048{
			u26: x.u0 << s,
			u27: x.u1<<s | x.u0>>ŝ,
			u28: x.u2<<s | x.u1>>ŝ,
			u29: x.u3<<s | x.u2>>ŝ,
			u30: x.u4<<s | x.u3>>ŝ,
			u31: x.u5<<s | x.u4>>ŝ,
		}
	case n > 1600:
		s := n - 1600
		ŝ := 64 - s
		return Uint2048{
			u25: x.u0 << s,
			u26: x.u1<<s | x.u0>>ŝ,
			u27: x.u2<<s | x.u1>>ŝ,
			u28: x.u3<<s | x.u2>>ŝ,
			u29: x.u4<<s | x.u3>>ŝ,
			u30: x.u5<<s | x.u4>>ŝ,
			u31: x.u6<<s | x.u5>>ŝ,
		}
	case n > 1536:
		s := n - 1536
		ŝ := 64 - s
		return Uint2048{
			u24: x.u0 << s,
			u25: x.u1<<s | x.u0>>ŝ,
			u26: x.u2<<s | x.u1>>ŝ,
			u27: x.u3<<s | x.u2>>ŝ,
			u28: x.u4<<s | x.u3>>ŝ,
			u29: x.u5<<s | x.u4>>ŝ,
			u30: x.u6<<s | x.u5>>ŝ,
			u31: x.u7<<s | x.u6>>ŝ,
		}
	case n > 1472:
		s := n - 1472
		ŝ := 64 - s
		return Uint2048{
			u23: x.u0 << s,
			u24: x.u1<<s | x.u0>>ŝ,
			u25: x.u2<<s | x.u1>>ŝ,
			u26: x.u3<<s | x.u2>>ŝ,
			u27: x.u4<<s | x.u3>>ŝ,
			u28: x.u5<<s | x.u4>>ŝ,
			u29: x.u6<<s | x.u5>>ŝ,
			u30: x.u7<<s | x.u6>>ŝ,
			u31: x.u8<<s | x.u7>>ŝ,
		}
	case n > 1408:
		s := n - 1408
		ŝ := 64 - s
		return Uint2048{
			u22: x.u0 << s,
			u23: x.u1<<s | x.u0>>ŝ,
			u24: x.u2<<s | x.u1>>ŝ,
			u25: x.u3<<s | x.u2>>ŝ,
			u26: x.u4<<s | x.u3>>ŝ,
			u27: x.u5<<s | x.u4>>ŝ,
			u28: x.u6<<s | x.u5>>ŝ,
			u29: x.u7<<s | x.u6>>ŝ,
			u30: x.u8<<s | x.u7>>ŝ,
			u31: x.u9<<s | x.u8>>ŝ,
		}
	case n > 1344:
		s := n - 1344
		ŝ := 64 - s
		return Uint2048{
			u21: x.u0 << s,
			u22: x.u1<<s | x.u0>>ŝ,
			u23: x.u2<<s | x.u1>>ŝ,
			u24: x.u3<<s | x.u2>>ŝ,
			u25: x.u4<<s | x.u3>>ŝ,
			u26: x.u5<<s | x.u4>>ŝ,
			u27: x.u6<<s | x.u5>>ŝ,
			u28: x.u7<<s | x.u6>>ŝ,
			u29: x.u8<<s | x.u7>>ŝ,
			u30: x.u9<<s | x.u8>>ŝ,
			u31: x.u10<<s | x.u9>>ŝ,
		}
	case n > 1280:
		s := n - 1280
		ŝ := 64 - s
		return Uint2048{
			u20: x.u0 << s,
			u21: x.u1<<s | x.u0>>ŝ,
			u22: x.u2<<s | x.u1>>ŝ,
			u23: x.u3<<s | x.u2>>ŝ,
			u24: x.u4<<s | x.u3>>ŝ,
			u25: x.u5<<s | x.u4>>ŝ,
			u26: x.u6<<s | x.u5>>ŝ,
			u27: x.u7<<s | x.u6>>ŝ,
			u28: x.u8<<s | x.u7>>ŝ,
			u29: x.u9<<s | x.u8>>ŝ,
			u30: x.u10<<s | x.u9>>ŝ,
			u31: x.u11<<s | x.u10>>ŝ,
		}
	case n > 1216:
		s := n - 1216
		ŝ := 64 - s
		return Uint2048{
			u19: x.u0 << s,
			u20: x.u1<<s | x.u0>>ŝ,
			u21: x.u2<<s | x.u1>>ŝ,
			u22: x.u3<<s | x.u2>>ŝ,
			u23: x.u4<<s | x.u3>>ŝ,
			u24: x.u5<<s | x.u4>>ŝ,
			u25: x.u6<<s | x.u5>>ŝ,
			u26: x.u7<<s | x.u6>>ŝ,
			u27: x.u8<<s | x.u7>>ŝ,
			u28: x.u9<<s | x.u8>>ŝ,
			u29: x.u10<<s | x.u9>>ŝ,
			u30: x.u11<<s | x.u10>>ŝ,
			u31: x.u12<<s | x.u11>>ŝ,
		}
	case n > 1152:
		s := n - 1152
		ŝ := 64 - s
		return Uint2048{
			u18: x.u0 << s,
			u19: x.u1<<s | x.u0>>ŝ,
			u20: x.u2<<s | x.u1>>ŝ,
			u21: x.u3<<s | x.u2>>ŝ,
			u22: x.u4<<s | x.u3>>ŝ,
			u23: x.u5<<s | x.u4>>ŝ,
			u24: x.u6<<s | x.u5>>ŝ,
			u25: x.u7<<s | x.u6>>ŝ,
			u26: x.u8<<s | x.u7>>ŝ,
			u27: x.u9<<s | x.u8>>ŝ,
			u28: x.u10<<s | x.u9>>ŝ,
			u29: x.u11<<s | x.u10>>ŝ,
			u30: x.u12<<s | x.u11>>ŝ,
			u31: x.u13<<s | x.u12>>ŝ,
		}
	case n > 1088:
		s := n - 1088
		ŝ := 64 - s
		return Uint2048{
			u17: x.u0 << s,
			u18: x.u1<<s | x.u0>>ŝ,
			u19: x.u2<<s | x.u1>>ŝ,
			u20: x.u3<<s | x.u2>>ŝ,
			u21: x.u4<<s | x.u3>>ŝ,
			u22: x.u5<<s | x.u4>>ŝ,
			u23: x.u6<<s | x.u5>>ŝ,
			u24: x.u7<<s | x.u6>>ŝ,
			u25: x.u8<<s | x.u7>>ŝ,
			u26: x.u9<<s | x.u8>>ŝ,
			u27: x.u10<<s | x.u9>>ŝ,
			u28: x.u11<<s | x.u10>>ŝ,
			u29: x.u12<<s | x.u11>>ŝ,
			u30: x.u13<<s | x.u12>>ŝ,
			u31: x.u14<<s | x.u13>>ŝ,
		}
	case n > 1024:
		s := n - 1024
		ŝ := 64 - s
		return Uint2048{
			u16: x.u0 << s,
			u17: x.u1<<s | x.u0>>ŝ,
			u18: x.u2<<s | x.u1>>ŝ,
			u19: x.u3<<s | x.u2>>ŝ,
			u20: x.u4<<s | x.u3>>ŝ,
			u21: x.u5<<s | x.u4>>ŝ,
			u22: x.u6<<s | x.u5>>ŝ,
			u23: x.u7<<s | x.u6>>ŝ,
			u24: x.u8<<s | x.u7>>ŝ,
			u25: x.u9<<s | x.u8>>ŝ,
			u26: x.u10<<s | x.u9>>ŝ,
			u27: x.u11<<s | x.u10>>ŝ,
			u28: x.u12<<s | x.u11>>ŝ,
			u29: x.u13<<s | x.u12>>ŝ,
			u30: x.u14<<s | x.u13>>ŝ,
			u31: x.u15<<s | x.u14>>ŝ,
		}
	case n > 960:
		s := n - 960
		ŝ := 64 - s
		return Uint2048{
			u15: x.u0 << s,
			u16: x.u1<<s | x.u0>>ŝ,
			u17: x.u2<<s | x.u1>>ŝ,
			u18: x.u3<<s | x.u2>>ŝ,
			u19: x.u4<<s | x.u3>>ŝ,
			u20: x.u5<<s | x.u4>>ŝ,
			u21: x.u6<<s | x.u5>>ŝ,
			u22: x.u7<<s | x.u6>>ŝ,
			u23: x.u8<<s | x.u7>>ŝ,
			u24: x.u9<<s | x.u8>>ŝ,
			u25: x.u10<<s | x.u9>>ŝ,
			u26: x.u11<<s | x.u10>>ŝ,
			u27: x.u12<<s | x.u11>>ŝ,
			u28: x.u13<<s | x.u12>>ŝ,
			u29: x.u14<<s | x.u13>>ŝ,
			u30: x.u15<<s | x.u14>>ŝ,
			u31: x.u16<<s | x.u15>>ŝ,
		}
	case n > 896:
		s := n - 896
		ŝ := 64 - s
		return Uint2048{
			u14: x.u0 << s,
			u15: x.u1<<s | x.u0>>ŝ,
			u16: x.u2<<s | x.u1>>ŝ,
			u17: x.u3<<s | x.u2>>ŝ,
			u18: x.u4<<s | x.u3>>ŝ,
			u19: x.u5<<s | x.u4>>ŝ,
			u20: x.u6<<s | x.u5>>ŝ,
			u21: x.u7<<s | x.u6>>ŝ,
			u22: x.u8<<s | x.u7>>ŝ,
			u23: x.u9<<s | x.u8>>ŝ,
			u24: x.u10<<s | x.u9>>ŝ,
			u25: x.u11<<s | x.u10>>ŝ,
			u26: x.u12<<s | x.u11>>ŝ,
			u27: x.u13<<s | x.u12>>ŝ,
			u28: x.u14<<s | x.u13>>ŝ,
			u29: x.u15<<s | x.u14>>ŝ,
			u30: x.u16<<s | x.u15>>ŝ,
			u31: x.u17<<s | x.u16>>ŝ,
		}
	case n > 832:
		s := n - 832
		ŝ := 64 - s
		return Uint2048{
			u13: x.u0 << s,
			u14: x.u1<<s | x.u0>>ŝ,
			u15: x.u2<<s | x.u1>>ŝ,
			u16: x.u3<<s | x.u2>>ŝ,
			u17: x.u4<<s | x.u3>>ŝ,
			u18: x.u5<<s | x.u4>>ŝ,
			u19: x.u6<<s | x.u5>>ŝ,
			u20: x.u7<<s | x.u6>>ŝ,
			u21: x.u8<<s | x.u7>>ŝ,
			u22: x.u9<<s | x.u8>>ŝ,
			u23: x.u10<<s | x.u9>>ŝ,
			u24: x.u11<<s | x.u10>>ŝ,
			u25: x.u12<<s | x.u11>>ŝ,
			u26: x.u13<<s | x.u12>>ŝ,
			u27: x.u14<<s | x.u13>>ŝ,
			u28: x.u15<<s | x.u14>>ŝ,
			u29: x.u16<<s | x.u15>>ŝ,
			u30: x.u17<<s | x.u16>>ŝ,
			u31: x.u18<<s | x.u17>>ŝ,
		}
	case n > 768:
		s := n - 768
		ŝ := 64 - s
		return Uint2048{
			u12: x.u0 << s,
			u13: x.u1<<s | x.u0>>ŝ,
			u14: x.u2<<s | x.u1>>ŝ,
			u15: x.u3<<s | x.u2>>ŝ,
			u16: x.u4<<s | x.u3>>ŝ,
			u17: x.u5<<s | x.u4>>ŝ,
			u18: x.u6<<s | x.u5>>ŝ,
			u19: x.u7<<s | x.u6>>ŝ,
			u20: x.u8<<s | x.u7>>ŝ,
			u21: x.u9<<s | x.u8>>ŝ,
			u22: x.u10<<s | x.u9>>ŝ,
			u23: x.u11<<s | x.u10>>ŝ,
			u24: x.u12<<s | x.u11>>ŝ,
			u25: x.u13<<s | x.u12>>ŝ,
			u26: x.u14<<s | x.u13>>ŝ,
			u27: x.u15<<s | x.u14>>ŝ,
			u28: x.u16<<s | x.u15>>ŝ,
			u29: x.u17<<s | x.u16>>ŝ,
			u30: x.u18<<s | x.u17>>ŝ,
			u31: x.u19<<s | x.u18>>ŝ,
		}
	case n > 704:
		s := n - 704
		ŝ := 64 - s
		return Uint2048{
			u11: x.u0 << s,
			u12: x.u1<<s | x.u0>>ŝ,
			u13: x.u2<<s | x.u1>>ŝ,
			u14: x.u3<<s | x.u2>>ŝ,
			u15: x.u4<<s | x.u3>>ŝ,
			u16: x.u5<<s | x.u4>>ŝ,
			u17: x.u6<<s | x.u5>>ŝ,
			u18: x.u7<<s | x.u6>>ŝ,
			u19: x.u8<<s | x.u7>>ŝ,
			u20: x.u9<<s | x.u8>>ŝ,
			u21: x.u10<<s | x.u9>>ŝ,
			u22: x.u11<<s | x.u10>>ŝ,
			u23: x.u12<<s | x.u11>>ŝ,
			u24: x.u13<<s | x.u12>>ŝ,
			u25: x.u14<<s | x.u13>>ŝ,
			u26: x.u15<<s | x.u14>>ŝ,
			u27: x.u16<<s | x.u15>>ŝ,
			u28: x.u17<<s | x.u16>>ŝ,
			u29: x.u18<<s | x.u17>>ŝ,
			u30: x.u19<<s | x.u18>>ŝ,
			u31: x.u20<<s | x.u19>>ŝ,
		}
	case n > 640:
		s := n - 640
		ŝ := 64 - s
		return Uint2048{
			u10: x.u0 << s,
			u11: x.u1<<s | x.u0>>ŝ,
			u12: x.u2<<s | x.u1>>ŝ,
			u13: x.u3<<s | x.u2>>ŝ,
			u14: x.u4<<s | x.u3>>ŝ,
			u15: x.u5<<s | x.u4>>ŝ,
			u16: x.u6<<s | x.u5>>ŝ,
			u17: x.u7<<s | x.u6>>ŝ,
			u18: x.u8<<s | x.u7>>ŝ,
			u19: x.u9<<s | x.u8>>ŝ,
			u20: x.u10<<s | x.u9>>ŝ,
			u21: x.u11<<s | x.u10>>ŝ,
			u22: x.u12<<s | x.u11>>ŝ,
			u23: x.u13<<s | x.u12>>ŝ,
			u24: x.u14<<s | x.u13>>ŝ,
			u25: x.u15<<s | x.u14>>ŝ,
			u26: x.u16<<s | x.u15>>ŝ,
			u27: x.u17<<s | x.u16>>ŝ,
			u28: x.u18<<s | x.u17>>ŝ,
			u29: x.u19<<s | x.u18>>ŝ,
			u30: x.u20<<s | x.u19>>ŝ,
			u31: x.u21<<s | x.u20>>ŝ,
		}
	case n > 576:
		s := n - 576
		ŝ := 64 - s
		return Uint2048{
			u9:  x.u0 << s,
			u10: x.u1<<s | x.u0>>ŝ,
			u11: x.u2<<s | x.u1>>ŝ,
			u12: x.u3<<s | x.u2>>ŝ,
			u13: x.u4<<s | x.u3>>ŝ,
			u14: x.u5<<s | x.u4>>ŝ,
			u15: x.u6<<s | x.u5>>ŝ,
			u16: x.u7<<s | x.u6>>ŝ,
			u17: x.u8<<s | x.u7>>ŝ,
			u18: x.u9<<s | x.u8>>ŝ,
			u19: x.u10<<s | x.u9>>ŝ,
			u20: x.u11<<s | x.u10>>ŝ,
			u21: x.u12<<s | x.u11>>ŝ,
			u22: x.u13<<s | x.u12>>ŝ,
			u23: x.u14<<s | x.u13>>ŝ,
			u24: x.u15<<s | x.u14>>ŝ,
			u25: x.u16<<s | x.u15>>ŝ,
			u26: x.u17<<s | x.u16>>ŝ,
			u27: x.u18<<s | x.u17>>ŝ,
			u28: x.u19<<s | x.u18>>ŝ,
			u29: x.u20<<s | x.u19>>ŝ,
			u30: x.u21<<s | x.u20>>ŝ,
			u31: x.u22<<s | x.u21>>ŝ,
		}
	case n > 512:
		s := n - 512
		ŝ := 64 - s
		return Uint2048{
			u8:  x.u0 << s,
			u9:  x.u1<<s | x.u0>>ŝ,
			u10: x.u2<<s | x.u1>>ŝ,
			u11: x.u3<<s | x.u2>>ŝ,
			u12: x.u4<<s | x.u3>>ŝ,
			u13: x.u5<<s | x.u4>>ŝ,
			u14: x.u6<<s | x.u5>>ŝ,
			u15: x.u7<<s | x.u6>>ŝ,
			u16: x.u8<<s | x.u7>>ŝ,
			u17: x.u9<<s | x.u8>>ŝ,
			u18: x.u10<<s | x.u9>>ŝ,
			u19: x.u11<<s | x.u10>>ŝ,
			u20: x.u12<<s | x.u11>>ŝ,
			u21: x.u13<<s | x.u12>>ŝ,
			u22: x.u14<<s | x.u13>>ŝ,
			u23: x.u15<<s | x.u14>>ŝ,
			u24: x.u16<<s | x.u15>>ŝ,
			u25: x.u17<<s | x.u16>>ŝ,
			u26: x.u18<<s | x.u17>>ŝ,
			u27: x.u19<<s | x.u18>>ŝ,
			u28: x.u20<<s | x.u19>>ŝ,
			u29: x.u21<<s | x.u20>>ŝ,
			u30: x.u22<<s | x.u21>>ŝ,
			u31: x.u23<<s | x.u22>>ŝ,
		}
	case n > 448:
		s := n - 448
		ŝ := 64 - s
		return Uint2048{
			u7:  x.u0 << s,
			u8:  x.u1<<s | x.u0>>ŝ,
			u9:  x.u2<<s | x.u1>>ŝ,
			u10: x.u3<<s | x.u2>>ŝ,
			u11: x.u4<<s | x.u3>>ŝ,
			u12: x.u5<<s | x.u4>>ŝ,
			u13: x.u6<<s | x.u5>>ŝ,
			u14: x.u7<<s | x.u6>>ŝ,
			u15: x.u8<<s | x.u7>>ŝ,
			u16: x.u9<<s | x.u8>>ŝ,
			u17: x.u10<<s | x.u9>>ŝ,
			u18: x.u11<<s | x.u10>>ŝ,
			u19: x.u12<<s | x.u11>>ŝ,
			u20: x.u13<<s | x.u12>>ŝ,
			u21: x.u14<<s | x.u13>>ŝ,
			u22: x.u15<<s | x.u14>>ŝ,
			u23: x.u16<<s | x.u15>>ŝ,
			u24: x.u17<<s | x.u16>>ŝ,
			u25: x.u18<<s | x.u17>>ŝ,
			u26: x.u19<<s | x.u18>>ŝ,
			u27: x.u20<<s | x.u19>>ŝ,
			u28: x.u21<<s | x.u20>>ŝ,
			u29: x.u22<<s | x.u21>>ŝ,
			u30: x.u23<<s | x.u22>>ŝ,
			u31: x.u24<<s | x.u23>>ŝ,
		}
	case n > 384:
		s := n - 384
		ŝ := 64 - s
		return Uint2048{
			u6:  x.u0 << s,
			u7:  x.u1<<s | x.u0>>ŝ,
			u8:  x.u2<<s | x.u1>>ŝ,
			u9:  x.u3<<s | x.u2>>ŝ,
			u10: x.u4<<s | x.u3>>ŝ,
			u11: x.u5<<s | x.u4>>ŝ,
			u12: x.u6<<s | x.u5>>ŝ,
			u13: x.u7<<s | x.u6>>ŝ,
			u14: x.u8<<s | x.u7>>ŝ,
			u15: x.u9<<s | x.u8>>ŝ,
			u16: x.u10<<s | x.u9>>ŝ,
			u17: x.u11<<s | x.u10>>ŝ,
			u18: x.u12<<s | x.u11>>ŝ,
			u19: x.u13<<s | x.u12>>ŝ,
			u20: x.u14<<s | x.u13>>ŝ,
			u21: x.u15<<s | x.u14>>ŝ,
			u22: x.u16<<s | x.u15>>ŝ,
			u23: x.u17<<s | x.u16>>ŝ,
			u24: x.u18<<s | x.u17>>ŝ,
			u25: x.u19<<s | x.u18>>ŝ,
			u26: x.u20<<s | x.u19>>ŝ,
			u27: x.u21<<s | x.u20>>ŝ,
			u28: x.u22<<s | x.u21>>ŝ,
			u29: x.u23<<s | x.u22>>ŝ,
			u30: x.u24<<s | x.u23>>ŝ,
			u31: x.u25<<s | x.u24>>ŝ,
		}
	case n > 320:
		s := n - 320
		ŝ := 64 - s
		return Uint2048{
			u5:  x.u0 << s,
			u6:  x.u1<<s | x.u0>>ŝ,
			u7:  x.u2<<s | x.u1>>ŝ,
			u8:  x.u3<<s | x.u2>>ŝ,
			u9:  x.u4<<s | x.u3>>ŝ,
			u10: x.u5<<s | x.u4>>ŝ,
			u11: x.u6<<s | x.u5>>ŝ,
			u12: x.u7<<s | x.u6>>ŝ,
			u13: x.u8<<s | x.u7>>ŝ,
			u14: x.u9<<s | x.u8>>ŝ,
			u15: x.u10<<s | x.u9>>ŝ,
			u16: x.u11<<s | x.u10>>ŝ,
			u17: x.u12<<s | x.u11>>ŝ,
			u18: x.u13<<s | x.u12>>ŝ,
			u19: x.u14<<s | x.u13>>ŝ,
			u20: x.u15<<s | x.u14>>ŝ,
			u21: x.u16<<s | x.u15>>ŝ,
			u22: x.u17<<s | x.u16>>ŝ,
			u23: x.u18<<s | x.u17>>ŝ,
			u24: x.u19<<s | x.u18>>ŝ,
			u25: x.u20<<s | x.u19>>ŝ,
			u26: x.u21<<s | x.u20>>ŝ,
			u27: x.u22<<s | x.u21>>ŝ,
			u28: x.u23<<s | x.u22>>ŝ,
			u29: x.u24<<s | x.u23>>ŝ,
			u30: x.u25<<s | x.u24>>ŝ,
			u31: x.u26<<s | x.u25>>ŝ,
		}
	case n > 256:
		s := n - 256
		ŝ := 64 - s
		return Uint2048{
			u4:  x.u0 << s,
			u5:  x.u1<<s | x.u0>>ŝ,
			u6:  x.u2<<s | x.u1>>ŝ,
			u7:  x.u3<<s | x.u2>>ŝ,
			u8:  x.u4<<s | x.u3>>ŝ,
			u9:  x.u5<<s | x.u4>>ŝ,
			u10: x.u6<<s | x.u5>>ŝ,
			u11: x.u7<<s | x.u6>>ŝ,
			u12: x.u8<<s | x.u7>>ŝ,
			u13: x.u9<<s | x.u8>>ŝ,
			u14: x.u10<<s | x.u9>>ŝ,
			u15: x.u11<<s | x.u10>>ŝ,
			u16: x.u12<<s | x.u11>>ŝ,
			u17: x.u13<<s | x.u12>>ŝ,
			u18: x.u14<<s | x.u13>>ŝ,
			u19: x.u15<<s | x.u14>>ŝ,
			u20: x.u16<<s | x.u15>>ŝ,
			u21: x.u17<<s | x.u16>>ŝ,
			u22: x.u18<<s | x.u17>>ŝ,
			u23: x.u19<<s | x.u18>>ŝ,
			u24: x.u20<<s | x.u19>>ŝ,
			u25: x.u21<<s | x.u20>>ŝ,
			u26: x.u22<<s | x.u21>>ŝ,
			u27: x.u23<<s | x.u22>>ŝ,
			u28: x.u24<<s | x.u23>>ŝ,
			u29: x.u25<<s | x.u24>>ŝ,
			u30: x.u26<<s | x.u25>>ŝ,
			u31: x.u27<<s | x.u26>>ŝ,
		}
	case n > 192:
		s := n - 192
		ŝ := 64 - s
		return Uint2048{
			u3:  x.u0 << s,
			u4:  x.u1<<s | x.u0>>ŝ,
			u5:  x.u2<<s | x.u1>>ŝ,
			u6:  x.u3<<s | x.u2>>ŝ,
			u7:  x.u4<<s | x.u3>>ŝ,
			u8:  x.u5<<s | x.u4>>ŝ,
			u9:  x.u6<<s | x.u5>>ŝ,
			u10: x.u7<<s | x.u6>>ŝ,
			u11: x.u8<<s | x.u7>>ŝ,
			u12: x.u9<<s | x.u8>>ŝ,
			u13: x.u10<<s | x.u9>>ŝ,
			u14: x.u11<<s | x.u10>>ŝ,
			u15: x.u12<<s | x.u11>>ŝ,
			u16: x.u13<<s | x.u12>>ŝ,
			u17: x.u14<<s | x.u13>>ŝ,
			u18: x.u15<<s | x.u14>>ŝ,
			u19: x.u16<<s | x.u15>>ŝ,
			u20: x.u17<<s | x.u16>>ŝ,
			u21: x.u18<<s | x.u17>>ŝ,
			u22: x.u19<<s | x.u18>>ŝ,
			u23: x.u20<<s | x.u19>>ŝ,
			u24: x.u21<<s | x.u20>>ŝ,
			u25: x.u22<<s | x.u21>>ŝ,
			u26: x.u23<<s | x.u22>>ŝ,
			u27: x.u24<<s | x.u23>>ŝ,
			u28: x.u25<<s | x.u24>>ŝ,
			u29: x.u26<<s | x.u25>>ŝ,
			u30: x.u27<<s | x.u26>>ŝ,
			u31: x.u28<<s | x.u27>>ŝ,
		}
	case n > 128:
		s := n - 128
		ŝ := 64 - s
		return Uint2048{
			u2:  x.u0 << s,
			u3:  x.u1<<s | x.u0>>ŝ,
			u4:  x.u2<<s | x.u1>>ŝ,
			u5:  x.u3<<s | x.u2>>ŝ,
			u6:  x.u4<<s | x.u3>>ŝ,
			u7:  x.u5<<s | x.u4>>ŝ,
			u8:  x.u6<<s | x.u5>>ŝ,
			u9:  x.u7<<s | x.u6>>ŝ,
			u10: x.u8<<s | x.u7>>ŝ,
			u11: x.u9<<s | x.u8>>ŝ,
			u12: x.u10<<s | x.u9>>ŝ,
			u13: x.u11<<s | x.u10>>ŝ,
			u14: x.u12<<s | x.u11>>ŝ,
			u15: x.u13<<s | x.u12>>ŝ,
			u16: x.u14<<s | x.u13>>ŝ,
			u17: x.u15<<s | x.u14>>ŝ,
			u18: x.u16<<s | x.u15>>ŝ,
			u19: x.u17<<s | x.u16>>ŝ,
			u20: x.u18<<s | x.u17>>ŝ,
			u21: x.u19<<s | x.u18>>ŝ,
			u22: x.u20<<s | x.u19>>ŝ,
			u23: x.u21<<s | x.u20>>ŝ,
			u24: x.u22<<s | x.u21>>ŝ,
			u25: x.u23<<s | x.u22>>ŝ,
			u26: x.u24<<s | x.u23>>ŝ,
			u27: x.u25<<s | x.u24>>ŝ,
			u28: x.u26<<s | x.u25>>ŝ,
			u29: x.u27<<s | x.u26>>ŝ,
			u30: x.u28<<s | x.u27>>ŝ,
			u31: x.u29<<s | x.u28>>ŝ,
		}
	case n > 64:
		s := n - 64
		ŝ := 64 - s
		return Uint2048{
			u1:  x.u0 << s,
			u2:  x.u1<<s | x.u0>>ŝ,
			u3:  x.u2<<s | x.u1>>ŝ,
			u4:  x.u3<<s | x.u2>>ŝ,
			u5:  x.u4<<s | x.u3>>ŝ,
			u6:  x.u5<<s | x.u4>>ŝ,
			u7:  x.u6<<s | x.u5>>ŝ,
			u8:  x.u7<<s | x.u6>>ŝ,
			u9:  x.u8<<s | x.u7>>ŝ,
			u10: x.u9<<s | x.u8>>ŝ,
			u11: x.u10<<s | x.u9>>ŝ,
			u12: x.u11<<s | x.u10>>ŝ,
			u13: x.u12<<s | x.u11>>ŝ,
			u14: x.u13<<s | x.u12>>ŝ,
			u15: x.u14<<s | x.u13>>ŝ,
			u16: x.u15<<s | x.u14>>ŝ,
			u17: x.u16<<s | x.u15>>ŝ,
			u18: x.u17<<s | x.u16>>ŝ,
			u19: x.u18<<s | x.u17>>ŝ,
			u20: x.u19<<s | x.u18>>ŝ,
			u21: x.u20<<s | x.u19>>ŝ,
			u22: x.u21<<s | x.u20>>ŝ,
			u23: x.u22<<s | x.u21>>ŝ,
			u24: x.u23<<s | x.u22>>ŝ,
			u25: x.u24<<s | x.u23>>ŝ,
			u26: x.u25<<s | x.u24>>ŝ,
			u27: x.u26<<s | x.u25>>ŝ,
			u28: x.u27<<s | x.u26>>ŝ,
			u29: x.u28<<s | x.u27>>ŝ,
			u30: x.u29<<s | x.u28>>ŝ,
			u31: x.u30<<s | x.u29>>ŝ,
		}
	default:
		s := n
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u0 << s,
			u1:  x.u1<<s | x.u0>>ŝ,
			u2:  x.u2<<s | x.u1>>ŝ,
			u3:  x.u3<<s | x.u2>>ŝ,
			u4:  x.u4<<s | x.u3>>ŝ,
			u5:  x.u5<<s | x.u4>>ŝ,
			u6:  x.u6<<s | x.u5>>ŝ,
			u7:  x.u7<<s | x.u6>>ŝ,
			u8:  x.u8<<s | x.u7>>ŝ,
			u9:  x.u9<<s | x.u8>>ŝ,
			u10: x.u10<<s | x.u9>>ŝ,
			u11: x.u11<<s | x.u10>>ŝ,
			u12: x.u12<<s | x.u11>>ŝ,
			u13: x.u13<<s | x.u12>>ŝ,
			u14: x.u14<<s | x.u13>>ŝ,
			u15: x.u15<<s | x.u14>>ŝ,
			u16: x.u16<<s | x.u15>>ŝ,
			u17: x.u17<<s | x.u16>>ŝ,
			u18: x.u18<<s | x.u17>>ŝ,
			u19: x.u19<<s | x.u18>>ŝ,
			u20: x.u20<<s | x.u19>>ŝ,
			u21: x.u21<<s | x.u20>>ŝ,
			u22: x.u22<<s | x.u21>>ŝ,
			u23: x.u23<<s | x.u22>>ŝ,
			u24: x.u24<<s | x.u23>>ŝ,
			u25: x.u25<<s | x.u24>>ŝ,
			u26: x.u26<<s | x.u25>>ŝ,
			u27: x.u27<<s | x.u26>>ŝ,
			u28: x.u28<<s | x.u27>>ŝ,
			u29: x.u29<<s | x.u28>>ŝ,
			u30: x.u30<<s | x.u29>>ŝ,
			u31: x.u31<<s | x.u30>>ŝ,
		}
	}
}

// Rsh returns x>>n.
func (x Uint2048) Rsh(n uint) Uint2048 {
	switch {
	case n > 1984:
		s := n - 1984
		return Uint2048{
			u0: x.u31 >> s,
		}
	case n > 1920:
		s := n - 1920
		ŝ := 64 - s
		return Uint2048{
			u0: x.u30>>s | x.u31<<ŝ,
			u1: x.u31 >> s,
		}
	case n > 1856:
		s := n - 1856
		ŝ := 64 - s
		return Uint2048{
			u0: x.u29>>s | x.u30<<ŝ,
			u1: x.u30>>s | x.u31<<ŝ,
			u2: x.u31 >> s,
		}
	case n > 1792:
		s := n - 1792
		ŝ := 64 - s
		return Uint2048{
			u0: x.u28>>s | x.u29<<ŝ,
			u1: x.u29>>s | x.u30<<ŝ,
			u2: x.u30>>s | x.u31<<ŝ,
			u3: x.u31 >> s,
		}
	case n > 1728:
		s := n - 1728
		ŝ := 64 - s
		return Uint2048{
			u0: x.u27>>s | x.u28<<ŝ,
			u1: x.u28>>s | x.u29<<ŝ,
			u2: x.u29>>s | x.u30<<ŝ,
			u3: x.u30>>s | x.u31<<ŝ,
			u4: x.u31 >> s,
		}
	case n > 1664:
		s := n - 1664
		ŝ := 64 - s
		return Uint2048{
			u0: x.u26>>s | x.u27<<ŝ,
			u1: x.u27>>s | x.u28<<ŝ,
			u2: x.u28>>s | x.u29<<ŝ,
			u3: x.u29>>s | x.u30<<ŝ,
			u4: x.u30>>s | x.u31<<ŝ,
			u5: x.u31 >> s,
		}
	case n > 1600:
		s := n - 1600
		ŝ := 64 - s
		return Uint2048{
			u0: x.u25>>s | x.u26<<ŝ,
			u1: x.u26>>s | x.u27<<ŝ,
			u2: x.u27>>s | x.u28<<ŝ,
			u3: x.u28>>s | x.u29<<ŝ,
			u4: x.u29>>s | x.u30<<ŝ,
			u5: x.u30>>s | x.u31<<ŝ,
			u6: x.u31 >> s,
		}
	case n > 1536:
		s := n - 1536
		ŝ := 64 - s
		return Uint2048{
			u0: x.u24>>s | x.u25<<ŝ,
			u1: x.u25>>s | x.u26<<ŝ,
			u2: x.u26>>s | x.u27<<ŝ,
			u3: x.u27>>s | x.u28<<ŝ,
			u4: x.u28>>s | x.u29<<ŝ,
			u5: x.u29>>s | x.u30<<ŝ,
			u6: x.u30>>s | x.u31<<ŝ,
			u7: x.u31 >> s,
		}
	case n > 1472:
		s := n - 1472
		ŝ := 64 - s
		return Uint2048{
			u0: x.u23>>s | x.u24<<ŝ,
			u1: x.u24>>s | x.u25<<ŝ,
			u2: x.u25>>s | x.u26<<ŝ,
			u3: x.u26>>s | x.u27<<ŝ,
			u4: x.u27>>s | x.u28<<ŝ,
			u5: x.u28>>s | x.u29<<ŝ,
			u6: x.u29>>s | x.u30<<ŝ,
			u7: x.u30>>s | x.u31<<ŝ,
			u8: x.u31 >> s,
		}
	case n > 1408:
		s := n - 1408
		ŝ := 64 - s
		return Uint2048{
			u0: x.u22>>s | x.u23<<ŝ,
			u1: x.u23>>s | x.u24<<ŝ,
			u2: x.u24>>s | x.u25<<ŝ,
			u3: x.u25>>s | x.u26<<ŝ,
			u4: x.u26>>s | x.u27<<ŝ,
			u5: x.u27>>s | x.u28<<ŝ,
			u6: x.u28>>s | x.u29<<ŝ,
			u7: x.u29>>s | x.u30<<ŝ,
			u8: x.u30>>s | x.u31<<ŝ,
			u9: x.u31 >> s,
		}
	case n > 1344:
		s := n - 1344
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u21>>s | x.u22<<ŝ,
			u1:  x.u22>>s | x.u23<<ŝ,
			u2:  x.u23>>s | x.u24<<ŝ,
			u3:  x.u24>>s | x.u25<<ŝ,
			u4:  x.u25>>s | x.u26<<ŝ,
			u5:  x.u26>>s | x.u27<<ŝ,
			u6:  x.u27>>s | x.u28<<ŝ,
			u7:  x.u28>>s | x.u29<<ŝ,
			u8:  x.u29>>s | x.u30<<ŝ,
			u9:  x.u30>>s | x.u31<<ŝ,
			u10: x.u31 >> s,
		}
	case n > 1280:
		s := n - 1280
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u20>>s | x.u21<<ŝ,
			u1:  x.u21>>s | x.u22<<ŝ,
			u2:  x.u22>>s | x.u23<<ŝ,
			u3:  x.u23>>s | x.u24<<ŝ,
			u4:  x.u24>>s | x.u25<<ŝ,
			u5:  x.u25>>s | x.u26<<ŝ,
			u6:  x.u26>>s | x.u27<<ŝ,
			u7:  x.u27>>s | x.u28<<ŝ,
			u8:  x.u28>>s | x.u29<<ŝ,
			u9:  x.u29>>s | x.u30<<ŝ,
			u10: x.u30>>s | x.u31<<ŝ,
			u11: x.u31 >> s,
		}
	case n > 1216:
		s := n - 1216
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u19>>s | x.u20<<ŝ,
			u1:  x.u20>>s | x.u21<<ŝ,
			u2:  x.u21>>s | x.u22<<ŝ,
			u3:  x.u22>>s | x.u23<<ŝ,
			u4:  x.u23>>s | x.u24<<ŝ,
			u5:  x.u24>>s | x.u25<<ŝ,
			u6:  x.u25>>s | x.u26<<ŝ,
			u7:  x.u26>>s | x.u27<<ŝ,
			u8:  x.u27>>s | x.u28<<ŝ,
			u9:  x.u28>>s | x.u29<<ŝ,
			u10: x.u29>>s | x.u30<<ŝ,
			u11: x.u30>>s | x.u31<<ŝ,
			u12: x.u31 >> s,
		}
	case n > 1152:
		s := n - 1152
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u18>>s | x.u19<<ŝ,
			u1:  x.u19>>s | x.u20<<ŝ,
			u2:  x.u20>>s | x.u21<<ŝ,
			u3:  x.u21>>s | x.u22<<ŝ,
			u4:  x.u22>>s | x.u23<<ŝ,
			u5:  x.u23>>s | x.u24<<ŝ,
			u6:  x.u24>>s | x.u25<<ŝ,
			u7:  x.u25>>s | x.u26<<ŝ,
			u8:  x.u26>>s | x.u27<<ŝ,
			u9:  x.u27>>s | x.u28<<ŝ,
			u10: x.u28>>s | x.u29<<ŝ,
			u11: x.u29>>s | x.u30<<ŝ,
			u12: x.u30>>s | x.u31<<ŝ,
			u13: x.u31 >> s,
		}
	case n > 1088:
		s := n - 1088
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u17>>s | x.u18<<ŝ,
			u1:  x.u18>>s | x.u19<<ŝ,
			u2:  x.u19>>s | x.u20<<ŝ,
			u3:  x.u20>>s | x.u21<<ŝ,
			u4:  x.u21>>s | x.u22<<ŝ,
			u5:  x.u22>>s | x.u23<<ŝ,
			u6:  x.u23>>s | x.u24<<ŝ,
			u7:  x.u24>>s | x.u25<<ŝ,
			u8:  x.u25>>s | x.u26<<ŝ,
			u9:  x.u26>>s | x.u27<<ŝ,
			u10: x.u27>>s | x.u28<<ŝ,
			u11: x.u28>>s | x.u29<<ŝ,
			u12: x.u29>>s | x.u30<<ŝ,
			u13: x.u30>>s | x.u31<<ŝ,
			u14: x.u31 >> s,
		}
	case n > 1024:
		s := n - 1024
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u16>>s | x.u17<<ŝ,
			u1:  x.u17>>s | x.u18<<ŝ,
			u2:  x.u18>>s | x.u19<<ŝ,
			u3:  x.u19>>s | x.u20<<ŝ,
			u4:  x.u20>>s | x.u21<<ŝ,
			u5:  x.u21>>s | x.u22<<ŝ,
			u6:  x.u22>>s | x.u23<<ŝ,
			u7:  x.u23>>s | x.u24<<ŝ,
			u8:  x.u24>>s | x.u25<<ŝ,
			u9:  x.u25>>s | x.u26<<ŝ,
			u10: x.u26>>s | x.u27<<ŝ,
			u11: x.u27>>s | x.u28<<ŝ,
			u12: x.u28>>s | x.u29<<ŝ,
			u13: x.u29>>s | x.u30<<ŝ,
			u14: x.u30>>s | x.u31<<ŝ,
			u15: x.u31 >> s,
		}
	case n > 960:
		s := n - 960
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u15>>s | x.u16<<ŝ,
			u1:  x.u16>>s | x.u17<<ŝ,
			u2:  x.u17>>s | x.u18<<ŝ,
			u3:  x.u18>>s | x.u19<<ŝ,
			u4:  x.u19>>s | x.u20<<ŝ,
			u5:  x.u20>>s | x.u21<<ŝ,
			u6:  x.u21>>s | x.u22<<ŝ,
			u7:  x.u22>>s | x.u23<<ŝ,
			u8:  x.u23>>s | x.u24<<ŝ,
			u9:  x.u24>>s | x.u25<<ŝ,
			u10: x.u25>>s | x.u26<<ŝ,
			u11: x.u26>>s | x.u27<<ŝ,
			u12: x.u27>>s | x.u28<<ŝ,
			u13: x.u28>>s | x.u29<<ŝ,
			u14: x.u29>>s | x.u30<<ŝ,
			u15: x.u30>>s | x.u31<<ŝ,
			u16: x.u31 >> s,
		}
	case n > 896:
		s := n - 896
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u14>>s | x.u15<<ŝ,
			u1:  x.u15>>s | x.u16<<ŝ,
			u2:  x.u16>>s | x.u17<<ŝ,
			u3:  x.u17>>s | x.u18<<ŝ,
			u4:  x.u18>>s | x.u19<<ŝ,
			u5:  x.u19>>s | x.u20<<ŝ,
			u6:  x.u20>>s | x.u21<<ŝ,
			u7:  x.u21>>s | x.u22<<ŝ,
			u8:  x.u22>>s | x.u23<<ŝ,
			u9:  x.u23>>s | x.u24<<ŝ,
			u10: x.u24>>s | x.u25<<ŝ,
			u11: x.u25>>s | x.u26<<ŝ,
			u12: x.u26>>s | x.u27<<ŝ,
			u13: x.u27>>s | x.u28<<ŝ,
			u14: x.u28>>s | x.u29<<ŝ,
			u15: x.u29>>s | x.u30<<ŝ,
			u16: x.u30>>s | x.u31<<ŝ,
			u17: x.u31 >> s,
		}
	case n > 832:
		s := n - 832
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u13>>s | x.u14<<ŝ,
			u1:  x.u14>>s | x.u15<<ŝ,
			u2:  x.u15>>s | x.u16<<ŝ,
			u3:  x.u16>>s | x.u17<<ŝ,
			u4:  x.u17>>s | x.u18<<ŝ,
			u5:  x.u18>>s | x.u19<<ŝ,
			u6:  x.u19>>s | x.u20<<ŝ,
			u7:  x.u20>>s | x.u21<<ŝ,
			u8:  x.u21>>s | x.u22<<ŝ,
			u9:  x.u22>>s | x.u23<<ŝ,
			u10: x.u23>>s | x.u24<<ŝ,
			u11: x.u24>>s | x.u25<<ŝ,
			u12: x.u25>>s | x.u26<<ŝ,
			u13: x.u26>>s | x.u27<<ŝ,
			u14: x.u27>>s | x.u28<<ŝ,
			u15: x.u28>>s | x.u29<<ŝ,
			u16: x.u29>>s | x.u30<<ŝ,
			u17: x.u30>>s | x.u31<<ŝ,
			u18: x.u31 >> s,
		}
	case n > 768:
		s := n - 768
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u12>>s | x.u13<<ŝ,
			u1:  x.u13>>s | x.u14<<ŝ,
			u2:  x.u14>>s | x.u15<<ŝ,
			u3:  x.u15>>s | x.u16<<ŝ,
			u4:  x.u16>>s | x.u17<<ŝ,
			u5:  x.u17>>s | x.u18<<ŝ,
			u6:  x.u18>>s | x.u19<<ŝ,
			u7:  x.u19>>s | x.u20<<ŝ,
			u8:  x.u20>>s | x.u21<<ŝ,
			u9:  x.u21>>s | x.u22<<ŝ,
			u10: x.u22>>s | x.u23<<ŝ,
			u11: x.u23>>s | x.u24<<ŝ,
			u12: x.u24>>s | x.u25<<ŝ,
			u13: x.u25>>s | x.u26<<ŝ,
			u14: x.u26>>s | x.u27<<ŝ,
			u15: x.u27>>s | x.u28<<ŝ,
			u16: x.u28>>s | x.u29<<ŝ,
			u17: x.u29>>s | x.u30<<ŝ,
			u18: x.u30>>s | x.u31<<ŝ,
			u19: x.u31 >> s,
		}
	case n > 704:
		s := n - 704
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u11>>s | x.u12<<ŝ,
			u1:  x.u12>>s | x.u13<<ŝ,
			u2:  x.u13>>s | x.u14<<ŝ,
			u3:  x.u14>>s | x.u15<<ŝ,
			u4:  x.u15>>s | x.u16<<ŝ,
			u5:  x.u16>>s | x.u17<<ŝ,
			u6:  x.u17>>s | x.u18<<ŝ,
			u7:  x.u18>>s | x.u19<<ŝ,
			u8:  x.u19>>s | x.u20<<ŝ,
			u9:  x.u20>>s | x.u21<<ŝ,
			u10: x.u21>>s | x.u22<<ŝ,
			u11: x.u22>>s | x.u23<<ŝ,
			u12: x.u23>>s | x.u24<<ŝ,
			u13: x.u24>>s | x.u25<<ŝ,
			u14: x.u25>>s | x.u26<<ŝ,
			u15: x.u26>>s | x.u27<<ŝ,
			u16: x.u27>>s | x.u28<<ŝ,
			u17: x.u28>>s | x.u29<<ŝ,
			u18: x.u29>>s | x.u30<<ŝ,
			u19: x.u30>>s | x.u31<<ŝ,
			u20: x.u31 >> s,
		}
	case n > 640:
		s := n - 640
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u10>>s | x.u11<<ŝ,
			u1:  x.u11>>s | x.u12<<ŝ,
			u2:  x.u12>>s | x.u13<<ŝ,
			u3:  x.u13>>s | x.u14<<ŝ,
			u4:  x.u14>>s | x.u15<<ŝ,
			u5:  x.u15>>s | x.u16<<ŝ,
			u6:  x.u16>>s | x.u17<<ŝ,
			u7:  x.u17>>s | x.u18<<ŝ,
			u8:  x.u18>>s | x.u19<<ŝ,
			u9:  x.u19>>s | x.u20<<ŝ,
			u10: x.u20>>s | x.u21<<ŝ,
			u11: x.u21>>s | x.u22<<ŝ,
			u12: x.u22>>s | x.u23<<ŝ,
			u13: x.u23>>s | x.u24<<ŝ,
			u14: x.u24>>s | x.u25<<ŝ,
			u15: x.u25>>s | x.u26<<ŝ,
			u16: x.u26>>s | x.u27<<ŝ,
			u17: x.u27>>s | x.u28<<ŝ,
			u18: x.u28>>s | x.u29<<ŝ,
			u19: x.u29>>s | x.u30<<ŝ,
			u20: x.u30>>s | x.u31<<ŝ,
			u21: x.u31 >> s,
		}
	case n > 576:
		s := n - 576
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u9>>s | x.u10<<ŝ,
			u1:  x.u10>>s | x.u11<<ŝ,
			u2:  x.u11>>s | x.u12<<ŝ,
			u3:  x.u12>>s | x.u13<<ŝ,
			u4:  x.u13>>s | x.u14<<ŝ,
			u5:  x.u14>>s | x.u15<<ŝ,
			u6:  x.u15>>s | x.u16<<ŝ,
			u7:  x.u16>>s | x.u17<<ŝ,
			u8:  x.u17>>s | x.u18<<ŝ,
			u9:  x.u18>>s | x.u19<<ŝ,
			u10: x.u19>>s | x.u20<<ŝ,
			u11: x.u20>>s | x.u21<<ŝ,
			u12: x.u21>>s | x.u22<<ŝ,
			u13: x.u22>>s | x.u23<<ŝ,
			u14: x.u23>>s | x.u24<<ŝ,
			u15: x.u24>>s | x.u25<<ŝ,
			u16: x.u25>>s | x.u26<<ŝ,
			u17: x.u26>>s | x.u27<<ŝ,
			u18: x.u27>>s | x.u28<<ŝ,
			u19: x.u28>>s | x.u29<<ŝ,
			u20: x.u29>>s | x.u30<<ŝ,
			u21: x.u30>>s | x.u31<<ŝ,
			u22: x.u31 >> s,
		}
	case n > 512:
		s := n - 512
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u8>>s | x.u9<<ŝ,
			u1:  x.u9>>s | x.u10<<ŝ,
			u2:  x.u10>>s | x.u11<<ŝ,
			u3:  x.u11>>s | x.u12<<ŝ,
			u4:  x.u12>>s | x.u13<<ŝ,
			u5:  x.u13>>s | x.u14<<ŝ,
			u6:  x.u14>>s | x.u15<<ŝ,
			u7:  x.u15>>s | x.u16<<ŝ,
			u8:  x.u16>>s | x.u17<<ŝ,
			u9:  x.u17>>s | x.u18<<ŝ,
			u10: x.u18>>s | x.u19<<ŝ,
			u11: x.u19>>s | x.u20<<ŝ,
			u12: x.u20>>s | x.u21<<ŝ,
			u13: x.u21>>s | x.u22<<ŝ,
			u14: x.u22>>s | x.u23<<ŝ,
			u15: x.u23>>s | x.u24<<ŝ,
			u16: x.u24>>s | x.u25<<ŝ,
			u17: x.u25>>s | x.u26<<ŝ,
			u18: x.u26>>s | x.u27<<ŝ,
			u19: x.u27>>s | x.u28<<ŝ,
			u20: x.u28>>s | x.u29<<ŝ,
			u21: x.u29>>s | x.u30<<ŝ,
			u22: x.u30>>s | x.u31<<ŝ,
			u23: x.u31 >> s,
		}
	case n > 448:
		s := n - 448
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u7>>s | x.u8<<ŝ,
			u1:  x.u8>>s | x.u9<<ŝ,
			u2:  x.u9>>s | x.u10<<ŝ,
			u3:  x.u10>>s | x.u11<<ŝ,
			u4:  x.u11>>s | x.u12<<ŝ,
			u5:  x.u12>>s | x.u13<<ŝ,
			u6:  x.u13>>s | x.u14<<ŝ,
			u7:  x.u14>>s | x.u15<<ŝ,
			u8:  x.u15>>s | x.u16<<ŝ,
			u9:  x.u16>>s | x.u17<<ŝ,
			u10: x.u17>>s | x.u18<<ŝ,
			u11: x.u18>>s | x.u19<<ŝ,
			u12: x.u19>>s | x.u20<<ŝ,
			u13: x.u20>>s | x.u21<<ŝ,
			u14: x.u21>>s | x.u22<<ŝ,
			u15: x.u22>>s | x.u23<<ŝ,
			u16: x.u23>>s | x.u24<<ŝ,
			u17: x.u24>>s | x.u25<<ŝ,
			u18: x.u25>>s | x.u26<<ŝ,
			u19: x.u26>>s | x.u27<<ŝ,
			u20: x.u27>>s | x.u28<<ŝ,
			u21: x.u28>>s | x.u29<<ŝ,
			u22: x.u29>>s | x.u30<<ŝ,
			u23: x.u30>>s | x.u31<<ŝ,
			u24: x.u31 >> s,
		}
	case n > 384:
		s := n - 384
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u6>>s | x.u7<<ŝ,
			u1:  x.u7>>s | x.u8<<ŝ,
			u2:  x.u8>>s | x.u9<<ŝ,
			u3:  x.u9>>s | x.u10<<ŝ,
			u4:  x.u10>>s | x.u11<<ŝ,
			u5:  x.u11>>s | x.u12<<ŝ,
			u6:  x.u12>>s | x.u13<<ŝ,
			u7:  x.u13>>s | x.u14<<ŝ,
			u8:  x.u14>>s | x.u15<<ŝ,
			u9:  x.u15>>s | x.u16<<ŝ,
			u10: x.u16>>s | x.u17<<ŝ,
			u11: x.u17>>s | x.u18<<ŝ,
			u12: x.u18>>s | x.u19<<ŝ,
			u13: x.u19>>s | x.u20<<ŝ,
			u14: x.u20>>s | x.u21<<ŝ,
			u15: x.u21>>s | x.u22<<ŝ,
			u16: x.u22>>s | x.u23<<ŝ,
			u17: x.u23>>s | x.u24<<ŝ,
			u18: x.u24>>s | x.u25<<ŝ,
			u19: x.u25>>s | x.u26<<ŝ,
			u20: x.u26>>s | x.u27<<ŝ,
			u21: x.u27>>s | x.u28<<ŝ,
			u22: x.u28>>s | x.u29<<ŝ,
			u23: x.u29>>s | x.u30<<ŝ,
			u24: x.u30>>s | x.u31<<ŝ,
			u25: x.u31 >> s,
		}
	case n > 320:
		s := n - 320
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u5>>s | x.u6<<ŝ,
			u1:  x.u6>>s | x.u7<<ŝ,
			u2:  x.u7>>s | x.u8<<ŝ,
			u3:  x.u8>>s | x.u9<<ŝ,
			u4:  x.u9>>s | x.u10<<ŝ,
			u5:  x.u10>>s | x.u11<<ŝ,
			u6:  x.u11>>s | x.u12<<ŝ,
			u7:  x.u12>>s | x.u13<<ŝ,
			u8:  x.u13>>s | x.u14<<ŝ,
			u9:  x.u14>>s | x.u15<<ŝ,
			u10: x.u15>>s | x.u16<<ŝ,
			u11: x.u16>>s | x.u17<<ŝ,
			u12: x.u17>>s | x.u18<<ŝ,
			u13: x.u18>>s | x.u19<<ŝ,
			u14: x.u19>>s | x.u20<<ŝ,
			u15: x.u20>>s | x.u21<<ŝ,
			u16: x.u21>>s | x.u22<<ŝ,
			u17: x.u22>>s | x.u23<<ŝ,
			u18: x.u23>>s | x.u24<<ŝ,
			u19: x.u24>>s | x.u25<<ŝ,
			u20: x.u25>>s | x.u26<<ŝ,
			u21: x.u26>>s | x.u27<<ŝ,
			u22: x.u27>>s | x.u28<<ŝ,
			u23: x.u28>>s | x.u29<<ŝ,
			u24: x.u29>>s | x.u30<<ŝ,
			u25: x.u30>>s | x.u31<<ŝ,
			u26: x.u31 >> s,
		}
	case n > 256:
		s := n - 256
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u4>>s | x.u5<<ŝ,
			u1:  x.u5>>s | x.u6<<ŝ,
			u2:  x.u6>>s | x.u7<<ŝ,
			u3:  x.u7>>s | x.u8<<ŝ,
			u4:  x.u8>>s | x.u9<<ŝ,
			u5:  x.u9>>s | x.u10<<ŝ,
			u6:  x.u10>>s | x.u11<<ŝ,
			u7:  x.u11>>s | x.u12<<ŝ,
			u8:  x.u12>>s | x.u13<<ŝ,
			u9:  x.u13>>s | x.u14<<ŝ,
			u10: x.u14>>s | x.u15<<ŝ,
			u11: x.u15>>s | x.u16<<ŝ,
			u12: x.u16>>s | x.u17<<ŝ,
			u13: x.u17>>s | x.u18<<ŝ,
			u14: x.u18>>s | x.u19<<ŝ,
			u15: x.u19>>s | x.u20<<ŝ,
			u16: x.u20>>s | x.u21<<ŝ,
			u17: x.u21>>s | x.u22<<ŝ,
			u18: x.u22>>s | x.u23<<ŝ,
			u19: x.u23>>s | x.u24<<ŝ,
			u20: x.u24>>s | x.u25<<ŝ,
			u21: x.u25>>s | x.u26<<ŝ,
			u22: x.u26>>s | x.u27<<ŝ,
			u23: x.u27>>s | x.u28<<ŝ,
			u24: x.u28>>s | x.u29<<ŝ,
			u25: x.u29>>s | x.u30<<ŝ,
			u26: x.u30>>s | x.u31<<ŝ,
			u27: x.u31 >> s,
		}
	case n > 192:
		s := n - 192
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u3>>s | x.u4<<ŝ,
			u1:  x.u4>>s | x.u5<<ŝ,
			u2:  x.u5>>s | x.u6<<ŝ,
			u3:  x.u6>>s | x.u7<<ŝ,
			u4:  x.u7>>s | x.u8<<ŝ,
			u5:  x.u8>>s | x.u9<<ŝ,
			u6:  x.u9>>s | x.u10<<ŝ,
			u7:  x.u10>>s | x.u11<<ŝ,
			u8:  x.u11>>s | x.u12<<ŝ,
			u9:  x.u12>>s | x.u13<<ŝ,
			u10: x.u13>>s | x.u14<<ŝ,
			u11: x.u14>>s | x.u15<<ŝ,
			u12: x.u15>>s | x.u16<<ŝ,
			u13: x.u16>>s | x.u17<<ŝ,
			u14: x.u17>>s | x.u18<<ŝ,
			u15: x.u18>>s | x.u19<<ŝ,
			u16: x.u19>>s | x.u20<<ŝ,
			u17: x.u20>>s | x.u21<<ŝ,
			u18: x.u21>>s | x.u22<<ŝ,
			u19: x.u22>>s | x.u23<<ŝ,
			u20: x.u23>>s | x.u24<<ŝ,
			u21: x.u24>>s | x.u25<<ŝ,
			u22: x.u25>>s | x.u26<<ŝ,
			u23: x.u26>>s | x.u27<<ŝ,
			u24: x.u27>>s | x.u28<<ŝ,
			u25: x.u28>>s | x.u29<<ŝ,
			u26: x.u29>>s | x.u30<<ŝ,
			u27: x.u30>>s | x.u31<<ŝ,
			u28: x.u31 >> s,
		}
	case n > 128:
		s := n - 128
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u2>>s | x.u3<<ŝ,
			u1:  x.u3>>s | x.u4<<ŝ,
			u2:  x.u4>>s | x.u5<<ŝ,
			u3:  x.u5>>s | x.u6<<ŝ,
			u4:  x.u6>>s | x.u7<<ŝ,
			u5:  x.u7>>s | x.u8<<ŝ,
			u6:  x.u8>>s | x.u9<<ŝ,
			u7:  x.u9>>s | x.u10<<ŝ,
			u8:  x.u10>>s | x.u11<<ŝ,
			u9:  x.u11>>s | x.u12<<ŝ,
			u10: x.u12>>s | x.u13<<ŝ,
			u11: x.u13>>s | x.u14<<ŝ,
			u12: x.u14>>s | x.u15<<ŝ,
			u13: x.u15>>s | x.u16<<ŝ,
			u14: x.u16>>s | x.u17<<ŝ,
			u15: x.u17>>s | x.u18<<ŝ,
			u16: x.u18>>s | x.u19<<ŝ,
			u17: x.u19>>s | x.u20<<ŝ,
			u18: x.u20>>s | x.u21<<ŝ,
			u19: x.u21>>s | x.u22<<ŝ,
			u20: x.u22>>s | x.u23<<ŝ,
			u21: x.u23>>s | x.u24<<ŝ,
			u22: x.u24>>s | x.u25<<ŝ,
			u23: x.u25>>s | x.u26<<ŝ,
			u24: x.u26>>s | x.u27<<ŝ,
			u25: x.u27>>s | x.u28<<ŝ,
			u26: x.u28>>s | x.u29<<ŝ,
			u27: x.u29>>s | x.u30<<ŝ,
			u28: x.u30>>s | x.u31<<ŝ,
			u29: x.u31 >> s,
		}
	case n > 64:
		s := n - 64
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u1>>s | x.u2<<ŝ,
			u1:  x.u2>>s | x.u3<<ŝ,
			u2:  x.u3>>s | x.u4<<ŝ,
			u3:  x.u4>>s | x.u5<<ŝ,
			u4:  x.u5>>s | x.u6<<ŝ,
			u5:  x.u6>>s | x.u7<<ŝ,
			u6:  x.u7>>s | x.u8<<ŝ,
			u7:  x.u8>>s | x.u9<<ŝ,
			u8:  x.u9>>s | x.u10<<ŝ,
			u9:  x.u10>>s | x.u11<<ŝ,
			u10: x.u11>>s | x.u12<<ŝ,
			u11: x.u12>>s | x.u13<<ŝ,
			u12: x.u13>>s | x.u14<<ŝ,
			u13: x.u14>>s | x.u15<<ŝ,
			u14: x.u15>>s | x.u16<<ŝ,
			u15: x.u16>>s | x.u17<<ŝ,
			u16: x.u17>>s | x.u18<<ŝ,
			u17: x.u18>>s | x.u19<<ŝ,
			u18: x.u19>>s | x.u20<<ŝ,
			u19: x.u20>>s | x.u21<<ŝ,
			u20: x.u21>>s | x.u22<<ŝ,
			u21: x.u22>>s | x.u23<<ŝ,
			u22: x.u23>>s | x.u24<<ŝ,
			u23: x.u24>>s | x.u25<<ŝ,
			u24: x.u25>>s | x.u26<<ŝ,
			u25: x.u26>>s | x.u27<<ŝ,
			u26: x.u27>>s | x.u28<<ŝ,
			u27: x.u28>>s | x.u29<<ŝ,
			u28: x.u29>>s | x.u30<<ŝ,
			u29: x.u30>>s | x.u31<<ŝ,
			u30: x.u31 >> s,
		}
	default:
		s := n
		ŝ := 64 - s
		return Uint2048{
			u0:  x.u0>>s | x.u1<<ŝ,
			u1:  x.u1>>s | x.u2<<ŝ,
			u2:  x.u2>>s | x.u3<<ŝ,
			u3:  x.u3>>s | x.u4<<ŝ,
			u4:  x.u4>>s | x.u5<<ŝ,
			u5:  x.u5>>s | x.u6<<ŝ,
			u6:  x.u6>>s | x.u7<<ŝ,
			u7:  x.u7>>s | x.u8<<ŝ,
			u8:  x.u8>>s | x.u9<<ŝ,
			u9:  x.u9>>s | x.u10<<ŝ,
			u10: x.u10>>s | x.u11<<ŝ,
			u11: x.u11>>s | x.u12<<ŝ,
			u12: x.u12>>s | x.u13<<ŝ,
			u13: x.u13>>s | x.u14<<ŝ,
			u14: x.u14>>s | x.u15<<ŝ,
			u15: x.u15>>s | x.u16<<ŝ,
			u16: x.u16>>s | x.u17<<ŝ,
			u17: x.u17>>s | x.u18<<ŝ,
			u18: x.u18>>s | x.u19<<ŝ,
			u19: x.u19>>s | x.u20<<ŝ,
			u20: x.u20>>s | x.u21<<ŝ,
			u21: x.u21>>s | x.u22<<ŝ,
			u22: x.u22>>s | x.u23<<ŝ,
			u23: x.u23>>s | x.u24<<ŝ,
			u24: x.u24>>s | x.u25<<ŝ,
			u25: x.u25>>s | x.u26<<ŝ,
			u26: x.u26>>s | x.u27<<ŝ,
			u27: x.u27>>s | x.u28<<ŝ,
			u28: x.u28>>s | x.u29<<ŝ,
			u29: x.u29>>s | x.u30<<ŝ,
			u30: x.u30>>s | x.u31<<ŝ,
			u31: x.u31 >> s,
		}
	}
}

// Add returns x+y.
func (x Uint2048) Add(y Uint2048) Uint2048 {
	var z Uint2048
	var carry uint64
	z.u0, carry = bits.Add64(x.u0, y.u0, 0)
	z.u1, carry = bits.Add64(x.u1, y.u1, carry)
	z.u2, carry = bits.Add64(x.u2, y.u2, carry)
	z.u3, carry = bits.Add64(x.u3, y.u3, carry)
	z.u4, carry = bits.Add64(x.u4, y.u4, carry)
	z.u5, carry = bits.Add64(x.u5, y.u5, carry)
	z.u6, carry = bits.Add64(x.u6, y.u6, carry)
	z.u7, carry = bits.Add64(x.u7, y.u7, carry)
	z.u8, carry = bits.Add64(x.u8, y.u8, carry)
	z.u9, carry = bits.Add64(x.u9, y.u9, carry)
	z.u10, carry = bits.Add64(x.u10, y.u10, carry)
	z.u11, carry = bits.Add64(x.u11, y.u11, carry)
	z.u12, carry = bits.Add64(x.u12, y.u12, carry)
	z.u13, carry = bits.Add64(x.u13, y.u13, carry)
	z.u14, carry = bits.Add64(x.u14, y.u14, carry)
	z.u15, carry = bits.Add64(x.u15, y.u15, carry)
	z.u16, carry = bits.Add64(x.u16, y.u16, carry)
	z.u17, carry = bits.Add64(x.u17, y.u17, carry)
	z.u18, carry = bits.Add64(x.u18, y.u18, carry)
	z.u19, carry = bits.Add64(x.u19, y.u19, carry)
	z.u20, carry = bits.Add64(x.u20, y.u20, carry)
	z.u21, carry = bits.Add64(x.u21, y.u21, carry)
	z.u22, carry = bits.Add64(x.u22, y.u22, carry)
	z.u23, carry = bits.Add64(x.u23, y.u23, carry)
	z.u24, carry = bits.Add64(x.u24, y.u24, carry)
	z.u25, carry = bits.Add64(x.u25, y.u25, carry)
	z.u26, carry = bits.Add64(x.u26, y.u26, carry)
	z.u27, carry = bits.Add64(x.u27, y.u27, carry)
	z.u28, carry = bits.Add64(x.u28, y.u28, carry)
	z.u29, carry = bits.Add64(x.u29, y.u29, carry)
	z.u30, carry = bits.Add64(x.u30, y.u30, carry)
	z.u31, _ = bits.Add64(x.u31, y.u31, carry)
	return z
}

// add64 returns x+y.
func (x Uint2048) add64(y uint64) Uint2048 {
	var z Uint2048
	var carry uint64
	z.u0, carry = bits.Add64(x.u0, y, 0)
	z.u1, carry = bits.Add64(x.u1, 0, carry)
	z.u2, carry = bits.Add64(x.u2, 0, carry)
	z.u3, carry = bits.Add64(x.u3, 0, carry)
	z.u4, carry = bits.Add64(x.u4, 0, carry)
	z.u5, carry = bits.Add64(x.u5, 0, carry)
	z.u6, carry = bits.Add64(x.u6, 0, carry)
	z.u7, carry = bits.Add64(x.u7, 0, carry)
	z.u8, carry = bits.Add64(x.u8, 0, carry)
	z.u9, carry = bits.Add64(x.u9, 0, carry)
	z.u10, carry = bits.Add64(x.u10, 0, carry)
	z.u11, carry = bits.Add64(x.u11, 0, carry)
	z.u12, carry = bits.Add64(x.u12, 0, carry)
	z.u13, carry = bits.Add64(x.u13, 0, carry)
	z.u14, carry = bits.Add64(x.u14, 0, carry)
	z.u15, carry = bits.Add64(x.u15, 0, carry)
	z.u16, carry = bits.Add64(x.u16, 0, carry)
	z.u17, carry = bits.Add64(x.u17, 0, carry)
	z.u18, carry = bits.Add64(x.u18, 0, carry)
	z.u19, carry = bits.Add64(x.u19, 0, carry)
	z.u20, carry = bits.Add64(x.u20, 0, carry)
	z.u21, carry = bits.Add64(x.u21, 0, carry)
	z.u22, carry = bits.Add64(x.u22, 0, carry)
	z.u23, carry = bits.Add64(x.u23, 0, carry)
	z.u24, carry = bits.Add64(x.u24, 0, carry)
	z.u25, carry = bits.Add64(x.u25, 0, carry)
	z.u26, carry = bits.Add64(x.u26, 0, carry)
	z.u27, carry = bits.Add64(x.u27, 0, carry)
	z.u28, carry = bits.Add64(x.u28, 0, carry)
	z.u29, carry = bits.Add64(x.u29, 0, carry)
	z.u30, carry = bits.Add64(x.u30, 0, carry)
	z.u31, _ = bits.Add64(x.u31, 0, carry)
	return z
}

// AddCheck returns x+y.
//
// carry is 1 if x+y overflows and 0 otherwise.
func (x Uint2048) AddCheck(y Uint2048) (z Uint2048, carry uint64) {
	z.u0, carry = bits.Add64(x.u0, y.u0, 0)
	z.u1, carry = bits.Add64(x.u1, y.u1, carry)
	z.u2, carry = bits.Add64(x.u2, y.u2, carry)
	z.u3, carry = bits.Add64(x.u3, y.u3, carry)
	z.u4, carry = bits.Add64(x.u4, y.u4, carry)
	z.u5, carry = bits.Add64(x.u5, y.u5, carry)
	z.u6, carry = bits.Add64(x.u6, y.u6, carry)
	z.u7, carry = bits.Add64(x.u7, y.u7, carry)
	z.u8, carry = bits.Add64(x.u8, y.u8, carry)
	z.u9, carry = bits.Add64(x.u9, y.u9, carry)
	z.u10, carry = bits.Add64(x.u10, y.u10, carry)
	z.u11, carry = bits.Add64(x.u11, y.u11, carry)
	z.u12, carry = bits.Add64(x.u12, y.u12, carry)
	z.u13, carry = bits.Add64(x.u13, y.u13, carry)
	z.u14, carry = bits.Add64(x.u14, y.u14, carry)
	z.u15, carry = bits.Add64(x.u15, y.u15, carry)
	z.u16, carry = bits.Add64(x.u16, y.u16, carry)
	z.u17, carry = bits.Add64(x.u17, y.u17, carry)
	z.u18, carry = bits.Add64(x.u18, y.u18, carry)
	z.u19, carry = bits.Add64(x.u19, y.u19, carry)
	z.u20, carry = bits.Add64(x.u20, y.u20, carry)
	z.u21, carry = bits.Add64(x.u21, y.u21, carry)
	z.u22, carry = bits.Add64(x.u22, y.u22, carry)
	z.u23, carry = bits.Add64(x.u23, y.u23, carry)
	z.u24, carry = bits.Add64(x.u24, y.u24, carry)
	z.u25, carry = bits.Add64(x.u25, y.u25, carry)
	z.u26, carry = bits.Add64(x.u26, y.u26, carry)
	z.u27, carry = bits.Add64(x.u27, y.u27, carry)
	z.u28, carry = bits.Add64(x.u28, y.u28, carry)
	z.u29, carry = bits.Add64(x.u29, y.u29, carry)
	z.u30, carry = bits.Add64(x.u30, y.u30, carry)
	z.u31, carry = bits.Add64(x.u31, y.u31, carry)
	return z, carry
}

// addCheck64 returns x+y.
//
// carry is 1 if x+y overflows and 0 otherwise.
func (x Uint2048) addCheck64(y uint64) (z Uint2048, carry uint64) {
	z.u0, carry = bits.Add64(x.u0, y, 0)
	z.u1, carry = bits.Add64(x.u1, 0, carry)
	z.u2, carry = bits.Add64(x.u2, 0, carry)
	z.u3, carry = bits.Add64(x.u3, 0, carry)
	z.u4, carry = bits.Add64(x.u4, 0, carry)
	z.u5, carry = bits.Add64(x.u5, 0, carry)
	z.u6, carry = bits.Add64(x.u6, 0, carry)
	z.u7, carry = bits.Add64(x.u7, 0, carry)
	z.u8, carry = bits.Add64(x.u8, 0, carry)
	z.u9, carry = bits.Add64(x.u9, 0, carry)
	z.u10, carry = bits.Add64(x.u10, 0, carry)
	z.u11, carry = bits.Add64(x.u11, 0, carry)
	z.u12, carry = bits.Add64(x.u12, 0, carry)
	z.u13, carry = bits.Add64(x.u13, 0, carry)
	z.u14, carry = bits.Add64(x.u14, 0, carry)
	z.u15, carry = bits.Add64(x.u15, 0, carry)
	z.u16, carry = bits.Add64(x.u16, 0, carry)
	z.u17, carry = bits.Add64(x.u17, 0, carry)
	z.u18, carry = bits.Add64(x.u18, 0, carry)
	z.u19, carry = bits.Add64(x.u19, 0, carry)
	z.u20, carry = bits.Add64(x.u20, 0, carry)
	z.u21, carry = bits.Add64(x.u21, 0, carry)
	z.u22, carry = bits.Add64(x.u22, 0, carry)
	z.u23, carry = bits.Add64(x.u23, 0, carry)
	z.u24, carry = bits.Add64(x.u24, 0, carry)
	z.u25, carry = bits.Add64(x.u25, 0, carry)
	z.u26, carry = bits.Add64(x.u26, 0, carry)
	z.u27, carry = bits.Add64(x.u27, 0, carry)
	z.u28, carry = bits.Add64(x.u28, 0, carry)
	z.u29, carry = bits.Add64(x.u29, 0, carry)
	z.u30, carry = bits.Add64(x.u30, 0, carry)
	z.u31, carry = bits.Add64(x.u31, 0, carry)
	return z, carry
}

// Sub returns x-y.
func (x Uint2048) Sub(y Uint2048) Uint2048 {
	var z Uint2048
	var borrow uint64
	z.u0, borrow = bits.Sub64(x.u0, y.u0, 0)
	z.u1, borrow = bits.Sub64(x.u1, y.u1, borrow)
	z.u2, borrow = bits.Sub64(x.u2, y.u2, borrow)
	z.u3, borrow = bits.Sub64(x.u3, y.u3, borrow)
	z.u4, borrow = bits.Sub64(x.u4, y.u4, borrow)
	z.u5, borrow = bits.Sub64(x.u5, y.u5, borrow)
	z.u6, borrow = bits.Sub64(x.u6, y.u6, borrow)
	z.u7, borrow = bits.Sub64(x.u7, y.u7, borrow)
	z.u8, borrow = bits.Sub64(x.u8, y.u8, borrow)
	z.u9, borrow = bits.Sub64(x.u9, y.u9, borrow)
	z.u10, borrow = bits.Sub64(x.u10, y.u10, borrow)
	z.u11, borrow = bits.Sub64(x.u11, y.u11, borrow)
	z.u12, borrow = bits.Sub64(x.u12, y.u12, borrow)
	z.u13, borrow = bits.Sub64(x.u13, y.u13, borrow)
	z.u14, borrow = bits.Sub64(x.u14, y.u14, borrow)
	z.u15, borrow = bits.Sub64(x.u15, y.u15, borrow)
	z.u16, borrow = bits.Sub64(x.u16, y.u16, borrow)
	z.u17, borrow = bits.Sub64(x.u17, y.u17, borrow)
	z.u18, borrow = bits.Sub64(x.u18, y.u18, borrow)
	z.u19, borrow = bits.Sub64(x.u19, y.u19, borrow)
	z.u20, borrow = bits.Sub64(x.u20, y.u20, borrow)
	z.u21, borrow = bits.Sub64(x.u21, y.u21, borrow)
	z.u22, borrow = bits.Sub64(x.u22, y.u22, borrow)
	z.u23, borrow = bits.Sub64(x.u23, y.u23, borrow)
	z.u24, borrow = bits.Sub64(x.u24, y.u24, borrow)
	z.u25, borrow = bits.Sub64(x.u25, y.u25, borrow)
	z.u26, borrow = bits.Sub64(x.u26, y.u26, borrow)
	z.u27, borrow = bits.Sub64(x.u27, y.u27, borrow)
	z.u28, borrow = bits.Sub64(x.u28, y.u28, borrow)
	z.u29, borrow = bits.Sub64(x.u29, y.u29, borrow)
	z.u30, borrow = bits.Sub64(x.u30, y.u30, borrow)
	z.u31, _ = bits.Sub64(x.u31, y.u31, borrow)
	return z
}

// sub64 returns x-y.
func (x Uint2048) sub64(y uint64) Uint2048 {
	var z Uint2048
	var borrow uint64
	z.u0, borrow = bits.Sub64(x.u0, y, 0)
	z.u1, borrow = bits.Sub64(x.u1, 0, borrow)
	z.u2, borrow = bits.Sub64(x.u2, 0, borrow)
	z.u3, borrow = bits.Sub64(x.u3, 0, borrow)
	z.u4, borrow = bits.Sub64(x.u4, 0, borrow)
	z.u5, borrow = bits.Sub64(x.u5, 0, borrow)
	z.u6, borrow = bits.Sub64(x.u6, 0, borrow)
	z.u7, borrow = bits.Sub64(x.u7, 0, borrow)
	z.u8, borrow = bits.Sub64(x.u8, 0, borrow)
	z.u9, borrow = bits.Sub64(x.u9, 0, borrow)
	z.u10, borrow = bits.Sub64(x.u10, 0, borrow)
	z.u11, borrow = bits.Sub64(x.u11, 0, borrow)
	z.u12, borrow = bits.Sub64(x.u12, 0, borrow)
	z.u13, borrow = bits.Sub64(x.u13, 0, borrow)
	z.u14, borrow = bits.Sub64(x.u14, 0, borrow)
	z.u15, borrow = bits.Sub64(x.u15, 0, borrow)
	z.u16, borrow = bits.Sub64(x.u16, 0, borrow)
	z.u17, borrow = bits.Sub64(x.u17, 0, borrow)
	z.u18, borrow = bits.Sub64(x.u18, 0, borrow)
	z.u19, borrow = bits.Sub64(x.u19, 0, borrow)
	z.u20, borrow = bits.Sub64(x.u20, 0, borrow)
	z.u21, borrow = bits.Sub64(x.u21, 0, borrow)
	z.u22, borrow = bits.Sub64(x.u22, 0, borrow)
	z.u23, borrow = bits.Sub64(x.u23, 0, borrow)
	z.u24, borrow = bits.Sub64(x.u24, 0, borrow)
	z.u25, borrow = bits.Sub64(x.u25, 0, borrow)
	z.u26, borrow = bits.Sub64(x.u26, 0, borrow)
	z.u27, borrow = bits.Sub64(x.u27, 0, borrow)
	z.u28, borrow = bits.Sub64(x.u28, 0, borrow)
	z.u29, borrow = bits.Sub64(x.u29, 0, borrow)
	z.u30, borrow = bits.Sub64(x.u30, 0, borrow)
	z.u31, _ = bits.Sub64(x.u31, 0, borrow)
	return z
}

// SubCheck returns x-y.
//
// borrow is 1 if x-y overflows and 0 otherwise.
func (x Uint2048) SubCheck(y Uint2048) (z Uint2048, borrow uint64) {
	z.u0, borrow = bits.Sub64(x.u0, y.u0, 0)
	z.u1, borrow = bits.Sub64(x.u1, y.u1, borrow)
	z.u2, borrow = bits.Sub64(x.u2, y.u2, borrow)
	z.u3, borrow = bits.Sub64(x.u3, y.u3, borrow)
	z.u4, borrow = bits.Sub64(x.u4, y.u4, borrow)
	z.u5, borrow = bits.Sub64(x.u5, y.u5, borrow)
	z.u6, borrow = bits.Sub64(x.u6, y.u6, borrow)
	z.u7, borrow = bits.Sub64(x.u7, y.u7, borrow)
	z.u8, borrow = bits.Sub64(x.u8, y.u8, borrow)
	z.u9, borrow = bits.Sub64(x.u9, y.u9, borrow)
	z.u10, borrow = bits.Sub64(x.u10, y.u10, borrow)
	z.u11, borrow = bits.Sub64(x.u11, y.u11, borrow)
	z.u12, borrow = bits.Sub64(x.u12, y.u12, borrow)
	z.u13, borrow = bits.Sub64(x.u13, y.u13, borrow)
	z.u14, borrow = bits.Sub64(x.u14, y.u14, borrow)
	z.u15, borrow = bits.Sub64(x.u15, y.u15, borrow)
	z.u16, borrow = bits.Sub64(x.u16, y.u16, borrow)
	z.u17, borrow = bits.Sub64(x.u17, y.u17, borrow)
	z.u18, borrow = bits.Sub64(x.u18, y.u18, borrow)
	z.u19, borrow = bits.Sub64(x.u19, y.u19, borrow)
	z.u20, borrow = bits.Sub64(x.u20, y.u20, borrow)
	z.u21, borrow = bits.Sub64(x.u21, y.u21, borrow)
	z.u22, borrow = bits.Sub64(x.u22, y.u22, borrow)
	z.u23, borrow = bits.Sub64(x.u23, y.u23, borrow)
	z.u24, borrow = bits.Sub64(x.u24, y.u24, borrow)
	z.u25, borrow = bits.Sub64(x.u25, y.u25, borrow)
	z.u26, borrow = bits.Sub64(x.u26, y.u26, borrow)
	z.u27, borrow = bits.Sub64(x.u27, y.u27, borrow)
	z.u28, borrow = bits.Sub64(x.u28, y.u28, borrow)
	z.u29, borrow = bits.Sub64(x.u29, y.u29, borrow)
	z.u30, borrow = bits.Sub64(x.u30, y.u30, borrow)
	z.u31, borrow = bits.Sub64(x.u31, y.u31, borrow)
	return z, borrow
}

// subCheck64 returns x-y.
//
// borrow is 1 if x-y overflows and 0 otherwise.
func (x Uint2048) subCheck64(y uint64) (z Uint2048, borrow uint64) {
	z.u0, borrow = bits.Sub64(x.u0, y, 0)
	z.u1, borrow = bits.Sub64(x.u1, 0, borrow)
	z.u2, borrow = bits.Sub64(x.u2, 0, borrow)
	z.u3, borrow = bits.Sub64(x.u3, 0, borrow)
	z.u4, borrow = bits.Sub64(x.u4, 0, borrow)
	z.u5, borrow = bits.Sub64(x.u5, 0, borrow)
	z.u6, borrow = bits.Sub64(x.u6, 0, borrow)
	z.u7, borrow = bits.Sub64(x.u7, 0, borrow)
	z.u8, borrow = bits.Sub64(x.u8, 0, borrow)
	z.u9, borrow = bits.Sub64(x.u9, 0, borrow)
	z.u10, borrow = bits.Sub64(x.u10, 0, borrow)
	z.u11, borrow = bits.Sub64(x.u11, 0, borrow)
	z.u12, borrow = bits.Sub64(x.u12, 0, borrow)
	z.u13, borrow = bits.Sub64(x.u13, 0, borrow)
	z.u14, borrow = bits.Sub64(x.u14, 0, borrow)
	z.u15, borrow = bits.Sub64(x.u15, 0, borrow)
	z.u16, borrow = bits.Sub64(x.u16, 0, borrow)
	z.u17, borrow = bits.Sub64(x.u17, 0, borrow)
	z.u18, borrow = bits.Sub64(x.u18, 0, borrow)
	z.u19, borrow = bits.Sub64(x.u19, 0, borrow)
	z.u20, borrow = bits.Sub64(x.u20, 0, borrow)
	z.u21, borrow = bits.Sub64(x.u21, 0, borrow)
	z.u22, borrow = bits.Sub64(x.u22, 0, borrow)
	z.u23, borrow = bits.Sub64(x.u23, 0, borrow)
	z.u24, borrow = bits.Sub64(x.u24, 0, borrow)
	z.u25, borrow = bits.Sub64(x.u25, 0, borrow)
	z.u26, borrow = bits.Sub64(x.u26, 0, borrow)
	z.u27, borrow = bits.Sub64(x.u27, 0, borrow)
	z.u28, borrow = bits.Sub64(x.u28, 0, borrow)
	z.u29, borrow = bits.Sub64(x.u29, 0, borrow)
	z.u30, borrow = bits.Sub64(x.u30, 0, borrow)
	z.u31, borrow = bits.Sub64(x.u31, 0, borrow)
	return z, borrow
}

// Mul returns x*y.
func (x Uint2048) Mul(y Uint2048) Uint2048 {
	var z Uint2048
	var c uint64

	// y.u0 * x
	if d := y.u0; d != 0 {
		c, z.u0 = bits.Mul64(x.u0, d)
		c, z.u1 = mulAddWWW(x.u1, d, c)
		c, z.u2 = mulAddWWW(x.u2, d, c)
		c, z.u3 = mulAddWWW(x.u3, d, c)
		c, z.u4 = mulAddWWW(x.u4, d, c)
		c, z.u5 = mulAddWWW(x.u5, d, c)
		c, z.u6 = mulAddWWW(x.u6, d, c)
		c, z.u7 = mulAddWWW(x.u7, d, c)
		c, z.u8 = mulAddWWW(x.u8, d, c)
		c, z.u9 = mulAddWWW(x.u9, d, c)
		c, z.u10 = mulAddWWW(x.u10, d, c)
		c, z.u11 = mulAddWWW(x.u11, d, c)
		c, z.u12 = mulAddWWW(x.u12, d, c)
		c, z.u13 = mulAddWWW(x.u13, d, c)
		c, z.u14 = mulAddWWW(x.u14, d, c)
		c, z.u15 = mulAddWWW(x.u15, d, c)
		c, z.u16 = mulAddWWW(x.u16, d, c)
		c, z.u17 = mulAddWWW(x.u17, d, c)
		c, z.u18 = mulAddWWW(x.u18, d, c)
		c, z.u19 = mulAddWWW(x.u19, d, c)
		c, z.u20 = mulAddWWW(x.u20, d, c)
		c, z.u21 = mulAddWWW(x.u21, d, c)
		c, z.u22 = mulAddWWW(x.u22, d, c)
		c, z.u23 = mulAddWWW(x.u23, d, c)
		c, z.u24 = mulAddWWW(x.u24, d, c)
		c, z.u25 = mulAddWWW(x.u25, d, c)
		c, z.u26 = mulAddWWW(x.u26, d, c)
		c, z.u27 = mulAddWWW(x.u27, d, c)
		c, z.u28 = mulAddWWW(x.u28, d, c)
		c, z.u29 = mulAddWWW(x.u29, d, c)
		c, z.u30 = mulAddWWW(x.u30, d, c)
		z.u31 += x.u31*d + c
	}

	// y.u1 * x
	if d := y.u1; d != 0 {
		c, z.u1 = mulAddWWW(x.u0, d, z.u1)
		c, z.u2 = mulAddWWWW(x.u1, d, z.u2, c)
		c, z.u3 = mulAddWWWW(x.u2, d, z.u3, c)
		c, z.u4 = mulAddWWWW(x.u3, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u4, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u5, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u6, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u7, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u8, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u9, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u10, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u11, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u12, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u13, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u14, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u15, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u16, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u17, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u18, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u19, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u20, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u21, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u22, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u23, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u24, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u25, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u26, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u27, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u28, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u29, d, z.u30, c)
		z.u31 += x.u30*d + c
	}

	// y.u2 * x
	if d := y.u2; d != 0 {
		c, z.u2 = mulAddWWW(x.u0, d, z.u2)
		c, z.u3 = mulAddWWWW(x.u1, d, z.u3, c)
		c, z.u4 = mulAddWWWW(x.u2, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u3, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u4, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u5, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u6, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u7, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u8, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u9, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u10, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u11, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u12, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u13, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u14, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u15, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u16, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u17, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u18, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u19, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u20, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u21, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u22, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u23, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u24, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u25, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u26, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u27, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u28, d, z.u30, c)
		z.u31 += x.u29*d + c
	}

	// y.u3 * x
	if d := y.u3; d != 0 {
		c, z.u3 = mulAddWWW(x.u0, d, z.u3)
		c, z.u4 = mulAddWWWW(x.u1, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u2, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u3, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u4, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u5, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u6, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u7, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u8, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u9, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u10, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u11, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u12, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u13, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u14, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u15, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u16, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u17, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u18, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u19, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u20, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u21, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u22, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u23, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u24, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u25, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u26, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u27, d, z.u30, c)
		z.u31 += x.u28*d + c
	}

	// y.u4 * x
	if d := y.u4; d != 0 {
		c, z.u4 = mulAddWWW(x.u0, d, z.u4)
		c, z.u5 = mulAddWWWW(x.u1, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u2, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u3, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u4, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u5, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u6, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u7, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u8, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u9, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u10, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u11, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u12, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u13, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u14, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u15, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u16, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u17, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u18, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u19, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u20, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u21, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u22, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u23, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u24, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u25, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u26, d, z.u30, c)
		z.u31 += x.u27*d + c
	}

	// y.u5 * x
	if d := y.u5; d != 0 {
		c, z.u5 = mulAddWWW(x.u0, d, z.u5)
		c, z.u6 = mulAddWWWW(x.u1, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u2, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u3, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u4, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u5, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u6, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u7, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u8, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u9, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u10, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u11, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u12, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u13, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u14, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u15, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u16, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u17, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u18, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u19, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u20, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u21, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u22, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u23, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u24, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u25, d, z.u30, c)
		z.u31 += x.u26*d + c
	}

	// y.u6 * x
	if d := y.u6; d != 0 {
		c, z.u6 = mulAddWWW(x.u0, d, z.u6)
		c, z.u7 = mulAddWWWW(x.u1, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u2, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u3, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u4, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u5, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u6, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u7, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u8, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u9, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u10, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u11, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u12, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u13, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u14, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u15, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u16, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u17, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u18, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u19, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u20, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u21, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u22, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u23, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u24, d, z.u30, c)
		z.u31 += x.u25*d + c
	}

	// y.u7 * x
	if d := y.u7; d != 0 {
		c, z.u7 = mulAddWWW(x.u0, d, z.u7)
		c, z.u8 = mulAddWWWW(x.u1, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u2, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u3, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u4, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u5, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u6, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u7, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u8, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u9, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u10, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u11, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u12, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u13, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u14, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u15, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u16, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u17, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u18, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u19, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u20, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u21, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u22, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u23, d, z.u30, c)
		z.u31 += x.u24*d + c
	}

	// y.u8 * x
	if d := y.u8; d != 0 {
		c, z.u8 = mulAddWWW(x.u0, d, z.u8)
		c, z.u9 = mulAddWWWW(x.u1, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u2, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u3, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u4, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u5, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u6, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u7, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u8, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u9, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u10, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u11, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u12, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u13, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u14, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u15, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u16, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u17, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u18, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u19, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u20, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u21, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u22, d, z.u30, c)
		z.u31 += x.u23*d + c
	}

	// y.u9 * x
	if d := y.u9; d != 0 {
		c, z.u9 = mulAddWWW(x.u0, d, z.u9)
		c, z.u10 = mulAddWWWW(x.u1, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u2, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u3, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u4, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u5, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u6, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u7, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u8, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u9, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u10, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u11, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u12, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u13, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u14, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u15, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u16, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u17, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u18, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u19, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u20, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u21, d, z.u30, c)
		z.u31 += x.u22*d + c
	}

	// y.u10 * x
	if d := y.u10; d != 0 {
		c, z.u10 = mulAddWWW(x.u0, d, z.u10)
		c, z.u11 = mulAddWWWW(x.u1, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u2, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u3, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u4, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u5, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u6, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u7, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u8, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u9, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u10, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u11, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u12, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u13, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u14, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u15, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u16, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u17, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u18, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u19, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u20, d, z.u30, c)
		z.u31 += x.u21*d + c
	}

	// y.u11 * x
	if d := y.u11; d != 0 {
		c, z.u11 = mulAddWWW(x.u0, d, z.u11)
		c, z.u12 = mulAddWWWW(x.u1, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u2, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u3, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u4, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u5, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u6, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u7, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u8, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u9, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u10, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u11, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u12, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u13, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u14, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u15, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u16, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u17, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u18, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u19, d, z.u30, c)
		z.u31 += x.u20*d + c
	}

	// y.u12 * x
	if d := y.u12; d != 0 {
		c, z.u12 = mulAddWWW(x.u0, d, z.u12)
		c, z.u13 = mulAddWWWW(x.u1, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u2, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u3, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u4, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u5, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u6, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u7, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u8, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u9, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u10, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u11, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u12, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u13, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u14, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u15, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u16, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u17, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u18, d, z.u30, c)
		z.u31 += x.u19*d + c
	}

	// y.u13 * x
	if d := y.u13; d != 0 {
		c, z.u13 = mulAddWWW(x.u0, d, z.u13)
		c, z.u14 = mulAddWWWW(x.u1, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u2, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u3, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u4, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u5, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u6, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u7, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u8, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u9, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u10, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u11, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u12, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u13, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u14, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u15, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u16, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u17, d, z.u30, c)
		z.u31 += x.u18*d + c
	}

	// y.u14 * x
	if d := y.u14; d != 0 {
		c, z.u14 = mulAddWWW(x.u0, d, z.u14)
		c, z.u15 = mulAddWWWW(x.u1, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u2, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u3, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u4, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u5, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u6, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u7, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u8, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u9, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u10, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u11, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u12, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u13, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u14, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u15, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u16, d, z.u30, c)
		z.u31 += x.u17*d + c
	}

	// y.u15 * x
	if d := y.u15; d != 0 {
		c, z.u15 = mulAddWWW(x.u0, d, z.u15)
		c, z.u16 = mulAddWWWW(x.u1, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u2, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u3, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u4, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u5, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u6, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u7, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u8, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u9, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u10, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u11, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u12, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u13, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u14, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u15, d, z.u30, c)
		z.u31 += x.u16*d + c
	}

	// y.u16 * x
	if d := y.u16; d != 0 {
		c, z.u16 = mulAddWWW(x.u0, d, z.u16)
		c, z.u17 = mulAddWWWW(x.u1, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u2, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u3, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u4, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u5, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u6, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u7, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u8, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u9, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u10, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u11, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u12, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u13, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u14, d, z.u30, c)
		z.u31 += x.u15*d + c
	}

	// y.u17 * x
	if d := y.u17; d != 0 {
		c, z.u17 = mulAddWWW(x.u0, d, z.u17)
		c, z.u18 = mulAddWWWW(x.u1, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u2, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u3, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u4, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u5, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u6, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u7, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u8, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u9, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u10, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u11, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u12, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u13, d, z.u30, c)
		z.u31 += x.u14*d + c
	}

	// y.u18 * x
	if d := y.u18; d != 0 {
		c, z.u18 = mulAddWWW(x.u0, d, z.u18)
		c, z.u19 = mulAddWWWW(x.u1, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u2, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u3, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u4, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u5, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u6, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u7, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u8, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u9, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u10, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u11, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u12, d, z.u30, c)
		z.u31 += x.u13*d + c
	}

	// y.u19 * x
	if d := y.u19; d != 0 {
		c, z.u19 = mulAddWWW(x.u0, d, z.u19)
		c, z.u20 = mulAddWWWW(x.u1, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u2, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u3, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u4, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u5, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u6, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u7, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u8, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u9, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u10, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u11, d, z.u30, c)
		z.u31 += x.u12*d + c
	}

	// y.u20 * x
	if d := y.u20; d != 0 {
		c, z.u20 = mulAddWWW(x.u0, d, z.u20)
		c, z.u21 = mulAddWWWW(x.u1, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u2, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u3, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u4, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u5, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u6, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u7, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u8, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u9, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u10, d, z.u30, c)
		z.u31 += x.u11*d + c
	}

	// y.u21 * x
	if d := y.u21; d != 0 {
		c, z.u21 = mulAddWWW(x.u0, d, z.u21)
		c, z.u22 = mulAddWWWW(x.u1, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u2, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u3, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u4, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u5, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u6, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u7, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u8, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u9, d, z.u30, c)
		z.u31 += x.u10*d + c
	}

	// y.u22 * x
	if d := y.u22; d != 0 {
		c, z.u22 = mulAddWWW(x.u0, d, z.u22)
		c, z.u23 = mulAddWWWW(x.u1, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u2, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u3, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u4, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u5, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u6, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u7, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u8, d, z.u30, c)
		z.u31 += x.u9*d + c
	}

	// y.u23 * x
	if d := y.u23; d != 0 {
		c, z.u23 = mulAddWWW(x.u0, d, z.u23)
		c, z.u24 = mulAddWWWW(x.u1, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u2, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u3, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u4, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u5, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u6, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u7, d, z.u30, c)
		z.u31 += x.u8*d + c
	}

	// y.u24 * x
	if d := y.u24; d != 0 {
		c, z.u24 = mulAddWWW(x.u0, d, z.u24)
		c, z.u25 = mulAddWWWW(x.u1, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u2, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u3, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u4, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u5, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u6, d, z.u30, c)
		z.u31 += x.u7*d + c
	}

	// y.u25 * x
	if d := y.u25; d != 0 {
		c, z.u25 = mulAddWWW(x.u0, d, z.u25)
		c, z.u26 = mulAddWWWW(x.u1, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u2, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u3, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u4, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u5, d, z.u30, c)
		z.u31 += x.u6*d + c
	}

	// y.u26 * x
	if d := y.u26; d != 0 {
		c, z.u26 = mulAddWWW(x.u0, d, z.u26)
		c, z.u27 = mulAddWWWW(x.u1, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u2, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u3, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u4, d, z.u30, c)
		z.u31 += x.u5*d + c
	}

	// y.u27 * x
	if d := y.u27; d != 0 {
		c, z.u27 = mulAddWWW(x.u0, d, z.u27)
		c, z.u28 = mulAddWWWW(x.u1, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u2, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u3, d, z.u30, c)
		z.u31 += x.u4*d + c
	}

	// y.u28 * x
	if d := y.u28; d != 0 {
		c, z.u28 = mulAddWWW(x.u0, d, z.u28)
		c, z.u29 = mulAddWWWW(x.u1, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u2, d, z.u30, c)
		z.u31 += x.u3*d + c
	}

	// y.u29 * x
	if d := y.u29; d != 0 {
		c, z.u29 = mulAddWWW(x.u0, d, z.u29)
		c, z.u30 = mulAddWWWW(x.u1, d, z.u30, c)
		z.u31 += x.u2*d + c
	}

	// y.u30 * x
	if d := y.u30; d != 0 {
		c, z.u30 = mulAddWWW(x.u0, d, z.u30)
		z.u31 += x.u1*d + c
	}

	// y.u31 * x
	if d := y.u31; d != 0 {
		z.u31 += x.u0 * d
	}

	return z
}

func (x Uint2048) mul1024(y Uint1024) Uint2048 {
	var z Uint2048
	var c uint64

	// y.u0 * x
	if d := y.u0; d != 0 {
		c, z.u0 = bits.Mul64(x.u0, d)
		c, z.u1 = mulAddWWW(x.u1, d, c)
		c, z.u2 = mulAddWWW(x.u2, d, c)
		c, z.u3 = mulAddWWW(x.u3, d, c)
		c, z.u4 = mulAddWWW(x.u4, d, c)
		c, z.u5 = mulAddWWW(x.u5, d, c)
		c, z.u6 = mulAddWWW(x.u6, d, c)
		c, z.u7 = mulAddWWW(x.u7, d, c)
		c, z.u8 = mulAddWWW(x.u8, d, c)
		c, z.u9 = mulAddWWW(x.u9, d, c)
		c, z.u10 = mulAddWWW(x.u10, d, c)
		c, z.u11 = mulAddWWW(x.u11, d, c)
		c, z.u12 = mulAddWWW(x.u12, d, c)
		c, z.u13 = mulAddWWW(x.u13, d, c)
		c, z.u14 = mulAddWWW(x.u14, d, c)
		c, z.u15 = mulAddWWW(x.u15, d, c)
		c, z.u16 = mulAddWWW(x.u16, d, c)
		c, z.u17 = mulAddWWW(x.u17, d, c)
		c, z.u18 = mulAddWWW(x.u18, d, c)
		c, z.u19 = mulAddWWW(x.u19, d, c)
		c, z.u20 = mulAddWWW(x.u20, d, c)
		c, z.u21 = mulAddWWW(x.u21, d, c)
		c, z.u22 = mulAddWWW(x.u22, d, c)
		c, z.u23 = mulAddWWW(x.u23, d, c)
		c, z.u24 = mulAddWWW(x.u24, d, c)
		c, z.u25 = mulAddWWW(x.u25, d, c)
		c, z.u26 = mulAddWWW(x.u26, d, c)
		c, z.u27 = mulAddWWW(x.u27, d, c)
		c, z.u28 = mulAddWWW(x.u28, d, c)
		c, z.u29 = mulAddWWW(x.u29, d, c)
		c, z.u30 = mulAddWWW(x.u30, d, c)
		z.u31 += x.u31*d + c
	}

	// y.u1 * x
	if d := y.u1; d != 0 {
		c, z.u1 = mulAddWWW(x.u0, d, z.u1)
		c, z.u2 = mulAddWWWW(x.u1, d, z.u2, c)
		c, z.u3 = mulAddWWWW(x.u2, d, z.u3, c)
		c, z.u4 = mulAddWWWW(x.u3, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u4, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u5, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u6, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u7, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u8, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u9, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u10, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u11, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u12, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u13, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u14, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u15, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u16, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u17, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u18, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u19, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u20, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u21, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u22, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u23, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u24, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u25, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u26, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u27, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u28, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u29, d, z.u30, c)
		z.u31 += x.u30*d + c
	}

	// y.u2 * x
	if d := y.u2; d != 0 {
		c, z.u2 = mulAddWWW(x.u0, d, z.u2)
		c, z.u3 = mulAddWWWW(x.u1, d, z.u3, c)
		c, z.u4 = mulAddWWWW(x.u2, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u3, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u4, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u5, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u6, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u7, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u8, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u9, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u10, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u11, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u12, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u13, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u14, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u15, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u16, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u17, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u18, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u19, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u20, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u21, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u22, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u23, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u24, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u25, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u26, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u27, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u28, d, z.u30, c)
		z.u31 += x.u29*d + c
	}

	// y.u3 * x
	if d := y.u3; d != 0 {
		c, z.u3 = mulAddWWW(x.u0, d, z.u3)
		c, z.u4 = mulAddWWWW(x.u1, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u2, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u3, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u4, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u5, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u6, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u7, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u8, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u9, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u10, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u11, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u12, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u13, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u14, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u15, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u16, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u17, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u18, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u19, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u20, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u21, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u22, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u23, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u24, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u25, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u26, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u27, d, z.u30, c)
		z.u31 += x.u28*d + c
	}

	// y.u4 * x
	if d := y.u4; d != 0 {
		c, z.u4 = mulAddWWW(x.u0, d, z.u4)
		c, z.u5 = mulAddWWWW(x.u1, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u2, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u3, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u4, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u5, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u6, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u7, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u8, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u9, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u10, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u11, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u12, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u13, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u14, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u15, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u16, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u17, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u18, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u19, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u20, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u21, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u22, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u23, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u24, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u25, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u26, d, z.u30, c)
		z.u31 += x.u27*d + c
	}

	// y.u5 * x
	if d := y.u5; d != 0 {
		c, z.u5 = mulAddWWW(x.u0, d, z.u5)
		c, z.u6 = mulAddWWWW(x.u1, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u2, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u3, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u4, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u5, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u6, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u7, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u8, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u9, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u10, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u11, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u12, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u13, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u14, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u15, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u16, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u17, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u18, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u19, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u20, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u21, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u22, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u23, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u24, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u25, d, z.u30, c)
		z.u31 += x.u26*d + c
	}

	// y.u6 * x
	if d := y.u6; d != 0 {
		c, z.u6 = mulAddWWW(x.u0, d, z.u6)
		c, z.u7 = mulAddWWWW(x.u1, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u2, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u3, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u4, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u5, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u6, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u7, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u8, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u9, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u10, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u11, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u12, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u13, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u14, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u15, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u16, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u17, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u18, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u19, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u20, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u21, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u22, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u23, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u24, d, z.u30, c)
		z.u31 += x.u25*d + c
	}

	// y.u7 * x
	if d := y.u7; d != 0 {
		c, z.u7 = mulAddWWW(x.u0, d, z.u7)
		c, z.u8 = mulAddWWWW(x.u1, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u2, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u3, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u4, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u5, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u6, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u7, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u8, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u9, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u10, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u11, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u12, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u13, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u14, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u15, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u16, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u17, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u18, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u19, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u20, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u21, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u22, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u23, d, z.u30, c)
		z.u31 += x.u24*d + c
	}

	// y.u8 * x
	if d := y.u8; d != 0 {
		c, z.u8 = mulAddWWW(x.u0, d, z.u8)
		c, z.u9 = mulAddWWWW(x.u1, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u2, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u3, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u4, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u5, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u6, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u7, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u8, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u9, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u10, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u11, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u12, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u13, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u14, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u15, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u16, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u17, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u18, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u19, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u20, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u21, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u22, d, z.u30, c)
		z.u31 += x.u23*d + c
	}

	// y.u9 * x
	if d := y.u9; d != 0 {
		c, z.u9 = mulAddWWW(x.u0, d, z.u9)
		c, z.u10 = mulAddWWWW(x.u1, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u2, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u3, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u4, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u5, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u6, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u7, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u8, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u9, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u10, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u11, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u12, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u13, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u14, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u15, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u16, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u17, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u18, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u19, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u20, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u21, d, z.u30, c)
		z.u31 += x.u22*d + c
	}

	// y.u10 * x
	if d := y.u10; d != 0 {
		c, z.u10 = mulAddWWW(x.u0, d, z.u10)
		c, z.u11 = mulAddWWWW(x.u1, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u2, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u3, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u4, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u5, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u6, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u7, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u8, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u9, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u10, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u11, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u12, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u13, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u14, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u15, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u16, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u17, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u18, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u19, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u20, d, z.u30, c)
		z.u31 += x.u21*d + c
	}

	// y.u11 * x
	if d := y.u11; d != 0 {
		c, z.u11 = mulAddWWW(x.u0, d, z.u11)
		c, z.u12 = mulAddWWWW(x.u1, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u2, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u3, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u4, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u5, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u6, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u7, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u8, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u9, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u10, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u11, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u12, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u13, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u14, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u15, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u16, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u17, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u18, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u19, d, z.u30, c)
		z.u31 += x.u20*d + c
	}

	// y.u12 * x
	if d := y.u12; d != 0 {
		c, z.u12 = mulAddWWW(x.u0, d, z.u12)
		c, z.u13 = mulAddWWWW(x.u1, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u2, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u3, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u4, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u5, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u6, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u7, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u8, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u9, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u10, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u11, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u12, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u13, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u14, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u15, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u16, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u17, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u18, d, z.u30, c)
		z.u31 += x.u19*d + c
	}

	// y.u13 * x
	if d := y.u13; d != 0 {
		c, z.u13 = mulAddWWW(x.u0, d, z.u13)
		c, z.u14 = mulAddWWWW(x.u1, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u2, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u3, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u4, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u5, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u6, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u7, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u8, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u9, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u10, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u11, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u12, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u13, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u14, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u15, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u16, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u17, d, z.u30, c)
		z.u31 += x.u18*d + c
	}

	// y.u14 * x
	if d := y.u14; d != 0 {
		c, z.u14 = mulAddWWW(x.u0, d, z.u14)
		c, z.u15 = mulAddWWWW(x.u1, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u2, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u3, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u4, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u5, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u6, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u7, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u8, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u9, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u10, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u11, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u12, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u13, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u14, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u15, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u16, d, z.u30, c)
		z.u31 += x.u17*d + c
	}

	// y.u15 * x
	if d := y.u15; d != 0 {
		c, z.u15 = mulAddWWW(x.u0, d, z.u15)
		c, z.u16 = mulAddWWWW(x.u1, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u2, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u3, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u4, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u5, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u6, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u7, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u8, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u9, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u10, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u11, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u12, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u13, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u14, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u15, d, z.u30, c)
		z.u31 += x.u16*d + c
	}

	return z
}

func (x Uint2048) mul64(y uint64) Uint2048 {
	if y == 0 {
		return Uint2048{}
	}
	var z Uint2048
	var c uint64
	c, z.u0 = bits.Mul64(x.u0, y)
	c, z.u1 = mulAddWWW(x.u1, y, c)
	c, z.u2 = mulAddWWW(x.u2, y, c)
	c, z.u3 = mulAddWWW(x.u3, y, c)
	c, z.u4 = mulAddWWW(x.u4, y, c)
	c, z.u5 = mulAddWWW(x.u5, y, c)
	c, z.u6 = mulAddWWW(x.u6, y, c)
	c, z.u7 = mulAddWWW(x.u7, y, c)
	c, z.u8 = mulAddWWW(x.u8, y, c)
	c, z.u9 = mulAddWWW(x.u9, y, c)
	c, z.u10 = mulAddWWW(x.u10, y, c)
	c, z.u11 = mulAddWWW(x.u11, y, c)
	c, z.u12 = mulAddWWW(x.u12, y, c)
	c, z.u13 = mulAddWWW(x.u13, y, c)
	c, z.u14 = mulAddWWW(x.u14, y, c)
	c, z.u15 = mulAddWWW(x.u15, y, c)
	c, z.u16 = mulAddWWW(x.u16, y, c)
	c, z.u17 = mulAddWWW(x.u17, y, c)
	c, z.u18 = mulAddWWW(x.u18, y, c)
	c, z.u19 = mulAddWWW(x.u19, y, c)
	c, z.u20 = mulAddWWW(x.u20, y, c)
	c, z.u21 = mulAddWWW(x.u21, y, c)
	c, z.u22 = mulAddWWW(x.u22, y, c)
	c, z.u23 = mulAddWWW(x.u23, y, c)
	c, z.u24 = mulAddWWW(x.u24, y, c)
	c, z.u25 = mulAddWWW(x.u25, y, c)
	c, z.u26 = mulAddWWW(x.u26, y, c)
	c, z.u27 = mulAddWWW(x.u27, y, c)
	c, z.u28 = mulAddWWW(x.u28, y, c)
	c, z.u29 = mulAddWWW(x.u29, y, c)
	c, z.u30 = mulAddWWW(x.u30, y, c)
	z.u31 += x.u31*y + c
	return z
}

// Exp return x^y mod m.
//
// If m == 0, Exp simply returns x^y.
func (x Uint2048) Exp(y, m Uint2048) Uint2048 {
	const mask = 1 << (64 - 1)

	// x^0 = 1
	if y.IsZero() {
		return U2048(1)
	}

	// x^1 mod m == x mod m
	mod := !m.IsZero()
	if y == U2048(1) && mod {
		_, r := x.QuoRem(m)
		return r
	}

	yv := []uint64{
		y.u0, y.u1, y.u2, y.u3, y.u4, y.u5, y.u6, y.u7, y.u8, y.u9, y.u10, y.u11, y.u12, y.u13, y.u14, y.u15, y.u16, y.u17, y.u18, y.u19, y.u20, y.u21, y.u22, y.u23, y.u24, y.u25, y.u26, y.u27, y.u28, y.u29, y.u30,
	}
	i := len(yv)
	for i > 0 && yv[i-1] == 0 {
		i--
	}
	yv = yv[:i]

	// TODO(eric): if x > 1 and y > 0 && mod, then use montgomery
	// or windowed exponentiation.

	z := x
	v := yv[len(yv)-1]
	s := bits.LeadingZeros64(v) + 1
	v <<= s
	w := 64 - s
	for j := 0; j < w; j++ {
		z = z.Mul(z)
		if v&mask != 0 {
			z = z.Mul(x)
		}
		if mod {
			_, z = z.QuoRem(m)
		}
		v <<= 1
	}

	for i := len(yv) - 2; i >= 0; i-- {
		v := yv[i]
		for j := 0; j < 64; j++ {
			z = z.Mul(z)
			if v&mask != 0 {
				z = z.Mul(x)
			}
			if mod {
				_, z = z.QuoRem(m)
			}
			v <<= 1
		}
	}
	return z
}

// mulPow10 returns x * 10^n.
func (x Uint2048) mulPow10(n uint) (Uint2048, bool) {
	switch {
	case x.IsZero():
		return Uint2048{}, true
	case n == 0:
		return x, true
	default:
		return x.MulCheck(U2048(10).Exp(U2048(uint64(n)), U2048(0)))
	}
}

var pow10tabUint2048 struct {
	values []Uint2048
	once   sync.Once
}

func pow10Uint2048(n uint) Uint2048 {
	pow10tabUint2048.once.Do(func() {
		tab := make([]Uint2048, 2+617)
		tab[0] = Uint2048{}
		tab[1] = U2048(1)
		for i := 2; i < len(tab); i++ {
			tab[i] = tab[i-1].mul64(10)
		}
		pow10tabUint2048.values = tab
	})
	return pow10tabUint2048.values[n]
}

// MulCheck returns x*y and reports whether the multiplication
// oveflowed.
func (x Uint2048) MulCheck(y Uint2048) (Uint2048, bool) {
	if x.BitLen()+y.BitLen() > 2048 {
		return Uint2048{}, false
	}

	var z Uint2048
	var c uint64

	// y.u0 * x
	if d := y.u0; d != 0 {
		c, z.u0 = bits.Mul64(x.u0, d)
		c, z.u1 = mulAddWWW(x.u1, d, c)
		c, z.u2 = mulAddWWW(x.u2, d, c)
		c, z.u3 = mulAddWWW(x.u3, d, c)
		c, z.u4 = mulAddWWW(x.u4, d, c)
		c, z.u5 = mulAddWWW(x.u5, d, c)
		c, z.u6 = mulAddWWW(x.u6, d, c)
		c, z.u7 = mulAddWWW(x.u7, d, c)
		c, z.u8 = mulAddWWW(x.u8, d, c)
		c, z.u9 = mulAddWWW(x.u9, d, c)
		c, z.u10 = mulAddWWW(x.u10, d, c)
		c, z.u11 = mulAddWWW(x.u11, d, c)
		c, z.u12 = mulAddWWW(x.u12, d, c)
		c, z.u13 = mulAddWWW(x.u13, d, c)
		c, z.u14 = mulAddWWW(x.u14, d, c)
		c, z.u15 = mulAddWWW(x.u15, d, c)
		c, z.u16 = mulAddWWW(x.u16, d, c)
		c, z.u17 = mulAddWWW(x.u17, d, c)
		c, z.u18 = mulAddWWW(x.u18, d, c)
		c, z.u19 = mulAddWWW(x.u19, d, c)
		c, z.u20 = mulAddWWW(x.u20, d, c)
		c, z.u21 = mulAddWWW(x.u21, d, c)
		c, z.u22 = mulAddWWW(x.u22, d, c)
		c, z.u23 = mulAddWWW(x.u23, d, c)
		c, z.u24 = mulAddWWW(x.u24, d, c)
		c, z.u25 = mulAddWWW(x.u25, d, c)
		c, z.u26 = mulAddWWW(x.u26, d, c)
		c, z.u27 = mulAddWWW(x.u27, d, c)
		c, z.u28 = mulAddWWW(x.u28, d, c)
		c, z.u29 = mulAddWWW(x.u29, d, c)
		c, z.u30 = mulAddWWW(x.u30, d, c)
		c, z.u31 = mulAddWWW(x.u31, d, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u1 * x
	if d := y.u1; d != 0 {
		c, z.u1 = mulAddWWW(x.u0, d, z.u1)
		c, z.u2 = mulAddWWWW(x.u1, d, z.u2, c)
		c, z.u3 = mulAddWWWW(x.u2, d, z.u3, c)
		c, z.u4 = mulAddWWWW(x.u3, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u4, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u5, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u6, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u7, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u8, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u9, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u10, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u11, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u12, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u13, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u14, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u15, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u16, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u17, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u18, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u19, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u20, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u21, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u22, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u23, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u24, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u25, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u26, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u27, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u28, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u29, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u30, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u2 * x
	if d := y.u2; d != 0 {
		c, z.u2 = mulAddWWW(x.u0, d, z.u2)
		c, z.u3 = mulAddWWWW(x.u1, d, z.u3, c)
		c, z.u4 = mulAddWWWW(x.u2, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u3, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u4, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u5, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u6, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u7, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u8, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u9, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u10, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u11, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u12, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u13, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u14, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u15, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u16, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u17, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u18, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u19, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u20, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u21, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u22, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u23, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u24, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u25, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u26, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u27, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u28, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u29, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u3 * x
	if d := y.u3; d != 0 {
		c, z.u3 = mulAddWWW(x.u0, d, z.u3)
		c, z.u4 = mulAddWWWW(x.u1, d, z.u4, c)
		c, z.u5 = mulAddWWWW(x.u2, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u3, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u4, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u5, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u6, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u7, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u8, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u9, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u10, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u11, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u12, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u13, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u14, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u15, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u16, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u17, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u18, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u19, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u20, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u21, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u22, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u23, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u24, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u25, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u26, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u27, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u28, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u4 * x
	if d := y.u4; d != 0 {
		c, z.u4 = mulAddWWW(x.u0, d, z.u4)
		c, z.u5 = mulAddWWWW(x.u1, d, z.u5, c)
		c, z.u6 = mulAddWWWW(x.u2, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u3, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u4, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u5, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u6, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u7, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u8, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u9, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u10, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u11, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u12, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u13, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u14, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u15, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u16, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u17, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u18, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u19, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u20, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u21, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u22, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u23, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u24, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u25, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u26, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u27, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u5 * x
	if d := y.u5; d != 0 {
		c, z.u5 = mulAddWWW(x.u0, d, z.u5)
		c, z.u6 = mulAddWWWW(x.u1, d, z.u6, c)
		c, z.u7 = mulAddWWWW(x.u2, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u3, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u4, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u5, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u6, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u7, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u8, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u9, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u10, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u11, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u12, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u13, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u14, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u15, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u16, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u17, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u18, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u19, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u20, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u21, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u22, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u23, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u24, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u25, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u26, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u6 * x
	if d := y.u6; d != 0 {
		c, z.u6 = mulAddWWW(x.u0, d, z.u6)
		c, z.u7 = mulAddWWWW(x.u1, d, z.u7, c)
		c, z.u8 = mulAddWWWW(x.u2, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u3, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u4, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u5, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u6, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u7, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u8, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u9, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u10, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u11, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u12, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u13, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u14, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u15, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u16, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u17, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u18, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u19, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u20, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u21, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u22, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u23, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u24, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u25, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u7 * x
	if d := y.u7; d != 0 {
		c, z.u7 = mulAddWWW(x.u0, d, z.u7)
		c, z.u8 = mulAddWWWW(x.u1, d, z.u8, c)
		c, z.u9 = mulAddWWWW(x.u2, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u3, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u4, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u5, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u6, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u7, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u8, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u9, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u10, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u11, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u12, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u13, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u14, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u15, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u16, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u17, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u18, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u19, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u20, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u21, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u22, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u23, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u24, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u8 * x
	if d := y.u8; d != 0 {
		c, z.u8 = mulAddWWW(x.u0, d, z.u8)
		c, z.u9 = mulAddWWWW(x.u1, d, z.u9, c)
		c, z.u10 = mulAddWWWW(x.u2, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u3, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u4, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u5, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u6, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u7, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u8, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u9, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u10, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u11, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u12, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u13, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u14, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u15, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u16, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u17, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u18, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u19, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u20, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u21, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u22, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u23, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u9 * x
	if d := y.u9; d != 0 {
		c, z.u9 = mulAddWWW(x.u0, d, z.u9)
		c, z.u10 = mulAddWWWW(x.u1, d, z.u10, c)
		c, z.u11 = mulAddWWWW(x.u2, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u3, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u4, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u5, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u6, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u7, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u8, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u9, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u10, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u11, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u12, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u13, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u14, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u15, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u16, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u17, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u18, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u19, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u20, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u21, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u22, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u10 * x
	if d := y.u10; d != 0 {
		c, z.u10 = mulAddWWW(x.u0, d, z.u10)
		c, z.u11 = mulAddWWWW(x.u1, d, z.u11, c)
		c, z.u12 = mulAddWWWW(x.u2, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u3, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u4, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u5, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u6, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u7, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u8, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u9, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u10, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u11, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u12, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u13, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u14, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u15, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u16, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u17, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u18, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u19, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u20, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u21, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u11 * x
	if d := y.u11; d != 0 {
		c, z.u11 = mulAddWWW(x.u0, d, z.u11)
		c, z.u12 = mulAddWWWW(x.u1, d, z.u12, c)
		c, z.u13 = mulAddWWWW(x.u2, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u3, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u4, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u5, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u6, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u7, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u8, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u9, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u10, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u11, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u12, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u13, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u14, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u15, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u16, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u17, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u18, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u19, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u20, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u12 * x
	if d := y.u12; d != 0 {
		c, z.u12 = mulAddWWW(x.u0, d, z.u12)
		c, z.u13 = mulAddWWWW(x.u1, d, z.u13, c)
		c, z.u14 = mulAddWWWW(x.u2, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u3, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u4, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u5, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u6, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u7, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u8, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u9, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u10, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u11, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u12, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u13, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u14, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u15, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u16, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u17, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u18, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u19, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u13 * x
	if d := y.u13; d != 0 {
		c, z.u13 = mulAddWWW(x.u0, d, z.u13)
		c, z.u14 = mulAddWWWW(x.u1, d, z.u14, c)
		c, z.u15 = mulAddWWWW(x.u2, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u3, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u4, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u5, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u6, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u7, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u8, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u9, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u10, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u11, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u12, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u13, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u14, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u15, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u16, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u17, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u18, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u14 * x
	if d := y.u14; d != 0 {
		c, z.u14 = mulAddWWW(x.u0, d, z.u14)
		c, z.u15 = mulAddWWWW(x.u1, d, z.u15, c)
		c, z.u16 = mulAddWWWW(x.u2, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u3, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u4, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u5, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u6, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u7, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u8, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u9, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u10, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u11, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u12, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u13, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u14, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u15, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u16, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u17, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u15 * x
	if d := y.u15; d != 0 {
		c, z.u15 = mulAddWWW(x.u0, d, z.u15)
		c, z.u16 = mulAddWWWW(x.u1, d, z.u16, c)
		c, z.u17 = mulAddWWWW(x.u2, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u3, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u4, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u5, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u6, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u7, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u8, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u9, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u10, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u11, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u12, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u13, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u14, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u15, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u16, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u16 * x
	if d := y.u16; d != 0 {
		c, z.u16 = mulAddWWW(x.u0, d, z.u16)
		c, z.u17 = mulAddWWWW(x.u1, d, z.u17, c)
		c, z.u18 = mulAddWWWW(x.u2, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u3, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u4, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u5, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u6, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u7, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u8, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u9, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u10, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u11, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u12, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u13, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u14, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u15, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u17 * x
	if d := y.u17; d != 0 {
		c, z.u17 = mulAddWWW(x.u0, d, z.u17)
		c, z.u18 = mulAddWWWW(x.u1, d, z.u18, c)
		c, z.u19 = mulAddWWWW(x.u2, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u3, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u4, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u5, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u6, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u7, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u8, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u9, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u10, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u11, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u12, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u13, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u14, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u18 * x
	if d := y.u18; d != 0 {
		c, z.u18 = mulAddWWW(x.u0, d, z.u18)
		c, z.u19 = mulAddWWWW(x.u1, d, z.u19, c)
		c, z.u20 = mulAddWWWW(x.u2, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u3, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u4, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u5, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u6, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u7, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u8, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u9, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u10, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u11, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u12, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u13, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u19 * x
	if d := y.u19; d != 0 {
		c, z.u19 = mulAddWWW(x.u0, d, z.u19)
		c, z.u20 = mulAddWWWW(x.u1, d, z.u20, c)
		c, z.u21 = mulAddWWWW(x.u2, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u3, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u4, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u5, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u6, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u7, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u8, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u9, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u10, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u11, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u12, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u20 * x
	if d := y.u20; d != 0 {
		c, z.u20 = mulAddWWW(x.u0, d, z.u20)
		c, z.u21 = mulAddWWWW(x.u1, d, z.u21, c)
		c, z.u22 = mulAddWWWW(x.u2, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u3, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u4, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u5, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u6, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u7, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u8, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u9, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u10, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u11, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u21 * x
	if d := y.u21; d != 0 {
		c, z.u21 = mulAddWWW(x.u0, d, z.u21)
		c, z.u22 = mulAddWWWW(x.u1, d, z.u22, c)
		c, z.u23 = mulAddWWWW(x.u2, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u3, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u4, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u5, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u6, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u7, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u8, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u9, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u10, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u22 * x
	if d := y.u22; d != 0 {
		c, z.u22 = mulAddWWW(x.u0, d, z.u22)
		c, z.u23 = mulAddWWWW(x.u1, d, z.u23, c)
		c, z.u24 = mulAddWWWW(x.u2, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u3, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u4, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u5, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u6, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u7, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u8, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u9, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u23 * x
	if d := y.u23; d != 0 {
		c, z.u23 = mulAddWWW(x.u0, d, z.u23)
		c, z.u24 = mulAddWWWW(x.u1, d, z.u24, c)
		c, z.u25 = mulAddWWWW(x.u2, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u3, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u4, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u5, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u6, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u7, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u8, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u24 * x
	if d := y.u24; d != 0 {
		c, z.u24 = mulAddWWW(x.u0, d, z.u24)
		c, z.u25 = mulAddWWWW(x.u1, d, z.u25, c)
		c, z.u26 = mulAddWWWW(x.u2, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u3, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u4, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u5, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u6, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u7, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u25 * x
	if d := y.u25; d != 0 {
		c, z.u25 = mulAddWWW(x.u0, d, z.u25)
		c, z.u26 = mulAddWWWW(x.u1, d, z.u26, c)
		c, z.u27 = mulAddWWWW(x.u2, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u3, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u4, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u5, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u6, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u26 * x
	if d := y.u26; d != 0 {
		c, z.u26 = mulAddWWW(x.u0, d, z.u26)
		c, z.u27 = mulAddWWWW(x.u1, d, z.u27, c)
		c, z.u28 = mulAddWWWW(x.u2, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u3, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u4, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u5, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u27 * x
	if d := y.u27; d != 0 {
		c, z.u27 = mulAddWWW(x.u0, d, z.u27)
		c, z.u28 = mulAddWWWW(x.u1, d, z.u28, c)
		c, z.u29 = mulAddWWWW(x.u2, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u3, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u4, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u28 * x
	if d := y.u28; d != 0 {
		c, z.u28 = mulAddWWW(x.u0, d, z.u28)
		c, z.u29 = mulAddWWWW(x.u1, d, z.u29, c)
		c, z.u30 = mulAddWWWW(x.u2, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u3, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u29 * x
	if d := y.u29; d != 0 {
		c, z.u29 = mulAddWWW(x.u0, d, z.u29)
		c, z.u30 = mulAddWWWW(x.u1, d, z.u30, c)
		c, z.u31 = mulAddWWWW(x.u2, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u30 * x
	if d := y.u30; d != 0 {
		c, z.u30 = mulAddWWW(x.u0, d, z.u30)
		c, z.u31 = mulAddWWWW(x.u1, d, z.u31, c)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	// y.u31 * x
	if d := y.u31; d != 0 {
		c, z.u31 = mulAddWWW(x.u0, d, z.u31)
		if c != 0 {
			return Uint2048{}, false
		}
	}

	return z, true
}

func (x Uint2048) mulCheck64(y uint64) (Uint2048, bool) {
	if y == 0 {
		return Uint2048{}, true
	}
	var z Uint2048
	var c uint64
	c, z.u0 = bits.Mul64(x.u0, y)
	c, z.u1 = mulAddWWW(x.u1, y, c)
	c, z.u2 = mulAddWWW(x.u2, y, c)
	c, z.u3 = mulAddWWW(x.u3, y, c)
	c, z.u4 = mulAddWWW(x.u4, y, c)
	c, z.u5 = mulAddWWW(x.u5, y, c)
	c, z.u6 = mulAddWWW(x.u6, y, c)
	c, z.u7 = mulAddWWW(x.u7, y, c)
	c, z.u8 = mulAddWWW(x.u8, y, c)
	c, z.u9 = mulAddWWW(x.u9, y, c)
	c, z.u10 = mulAddWWW(x.u10, y, c)
	c, z.u11 = mulAddWWW(x.u11, y, c)
	c, z.u12 = mulAddWWW(x.u12, y, c)
	c, z.u13 = mulAddWWW(x.u13, y, c)
	c, z.u14 = mulAddWWW(x.u14, y, c)
	c, z.u15 = mulAddWWW(x.u15, y, c)
	c, z.u16 = mulAddWWW(x.u16, y, c)
	c, z.u17 = mulAddWWW(x.u17, y, c)
	c, z.u18 = mulAddWWW(x.u18, y, c)
	c, z.u19 = mulAddWWW(x.u19, y, c)
	c, z.u20 = mulAddWWW(x.u20, y, c)
	c, z.u21 = mulAddWWW(x.u21, y, c)
	c, z.u22 = mulAddWWW(x.u22, y, c)
	c, z.u23 = mulAddWWW(x.u23, y, c)
	c, z.u24 = mulAddWWW(x.u24, y, c)
	c, z.u25 = mulAddWWW(x.u25, y, c)
	c, z.u26 = mulAddWWW(x.u26, y, c)
	c, z.u27 = mulAddWWW(x.u27, y, c)
	c, z.u28 = mulAddWWW(x.u28, y, c)
	c, z.u29 = mulAddWWW(x.u29, y, c)
	c, z.u30 = mulAddWWW(x.u30, y, c)
	c, z.u31 = mulAddWWW(x.u31, y, c)
	if c != 0 {
		return Uint2048{}, false
	}
	return z, true
}

// QuoRem returns (q, r) such that
//
//	q = x/y
//	r = x - y*q
func (x Uint2048) QuoRem(y Uint2048) (q, r Uint2048) {
	if x.Cmp(y) < 0 {
		// x/y for x < y = 0.
		// x%y for x < y = x.
		return Uint2048{}, x
	}

	if y.high().IsZero() {
		q, rr := x.quoRem1024(y.low())
		return q, u2048(rr, Uint1024{})
	}

	n := uint(y.high().LeadingZeros())
	y1 := y.Lsh(n) // y1 := y<<n
	x1 := x.Rsh(1) // x1 := x>>1
	tq, _ := div1024(x1.high(), x1.low(), y1.high())
	tq = tq.Rsh(1023 - n) // tq >>= 1023 - n
	if !tq.IsZero() {
		tq = tq.sub64(1) // tq--
	}
	q = u2048(tq, Uint1024{})
	ytq := y.mul1024(tq) // ytq := y*tq
	r = x.Sub(ytq)       // r = x-ytq
	if r.Cmp(y) >= 0 {
		q = q.add64(1) // q++
		r = r.Sub(y)   // r -= y
	}
	return
}

// quoRem1024 returns (q, r) such that
//
//	q = x/y
//	r = x - y*q
func (x Uint2048) quoRem1024(y Uint1024) (q Uint2048, r Uint1024) {
	if x.high().Cmp(y) < 0 {
		lo, r := div1024(x.high(), x.low(), y)
		return u2048(lo, Uint1024{}), r
	}
	hi, r := div1024(Uint1024{}, x.high(), y)
	lo, r := div1024(r, x.low(), y)
	return u2048(lo, hi), r
}

// quoRem64 returns (q, r) such that
//
//	q = x/y
//	r = x - y*q
func (x Uint2048) quoRem64(y uint64) (q Uint2048, r uint64) {
	q.u31, r = bits.Div64(0, x.u31, y)
	q.u30, r = bits.Div64(r, x.u30, y)
	q.u29, r = bits.Div64(r, x.u29, y)
	q.u28, r = bits.Div64(r, x.u28, y)
	q.u27, r = bits.Div64(r, x.u27, y)
	q.u26, r = bits.Div64(r, x.u26, y)
	q.u25, r = bits.Div64(r, x.u25, y)
	q.u24, r = bits.Div64(r, x.u24, y)
	q.u23, r = bits.Div64(r, x.u23, y)
	q.u22, r = bits.Div64(r, x.u22, y)
	q.u21, r = bits.Div64(r, x.u21, y)
	q.u20, r = bits.Div64(r, x.u20, y)
	q.u19, r = bits.Div64(r, x.u19, y)
	q.u18, r = bits.Div64(r, x.u18, y)
	q.u17, r = bits.Div64(r, x.u17, y)
	q.u16, r = bits.Div64(r, x.u16, y)
	q.u15, r = bits.Div64(r, x.u15, y)
	q.u14, r = bits.Div64(r, x.u14, y)
	q.u13, r = bits.Div64(r, x.u13, y)
	q.u12, r = bits.Div64(r, x.u12, y)
	q.u11, r = bits.Div64(r, x.u11, y)
	q.u10, r = bits.Div64(r, x.u10, y)
	q.u9, r = bits.Div64(r, x.u9, y)
	q.u8, r = bits.Div64(r, x.u8, y)
	q.u7, r = bits.Div64(r, x.u7, y)
	q.u6, r = bits.Div64(r, x.u6, y)
	q.u5, r = bits.Div64(r, x.u5, y)
	q.u4, r = bits.Div64(r, x.u4, y)
	q.u3, r = bits.Div64(r, x.u3, y)
	q.u2, r = bits.Div64(r, x.u2, y)
	q.u1, r = bits.Div64(r, x.u1, y)
	q.u0, r = bits.Div64(r, x.u0, y)
	return q, r
}

// div2048 returns (q, r) such that
//
//	q = (hi, lo)/y
//	r = (hi, lo) - y*q
func div2048(hi, lo, y Uint2048) (q, r Uint2048) {
	if y.IsZero() {
		panic("integer divide by zero")
	}
	if y.Cmp(hi) <= 0 {
		panic("integer overflow")
	}

	s := uint(y.LeadingZeros())
	y = y.Lsh(s)    // y = y<<s
	yn1 := y.high() // yn1 := y >> 1024
	yn0 := y.low()  // yn0 := y & mask1024

	un32 := hi.Lsh(s).Or(lo.Rsh(2048 - s)) // un32 := hi<<s | lo>>(2048-s)
	un10 := lo.Lsh(s)                      // un10 := lo<<s
	un1 := un10.high()                     // un1 := un10 >> 1024
	un0 := un10.low()                      // un0 := un10 & mask1024
	q1, rhat := un32.quoRem1024(yn1)

	var c uint64 // rhat + yn1 carry

	// for q1 >= two1024 || q1*yn0 > two1024*rhat+un1 { ... }
	for !q1.high().IsZero() || q1.mul1024(yn0).Cmp(u2048(un1, rhat)) > 0 {
		q1 = q1.sub64(1)             // q1--
		rhat, c = rhat.AddCheck(yn1) // rhat += yn1
		if c != 0 {
			break
		}
	}

	// un21 := un32*two1024 + un1 - q1*y
	un21 := u2048(un1, un32.low()).Sub(q1.Mul(y))
	q0, rhat := un21.quoRem1024(yn1)

	// for q0 >= two1024 || q0*yn0 > two1024*rhat+un0 { ... }
	for !q0.high().IsZero() || q0.mul1024(yn0).Cmp(u2048(un0, rhat)) > 0 {
		q0 = q0.sub64(1)             // q0--
		rhat, c = rhat.AddCheck(yn1) // rhat += yn1
		if c != 0 {
			break
		}
	}

	// q = q1*two1024 + q0
	q = u2048(q0.low(), q1.low())
	// r = (un21*two1024 + un0 - q0*y) >> s
	r = u2048(un0, un21.low()).Sub(q0.Mul(y)).Rsh(s)
	return
}

func (x Uint2048) GoString() string {
	return fmt.Sprintf("[%d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d %d]",
		x.u0,
		x.u1,
		x.u2,
		x.u3,
		x.u4,
		x.u5,
		x.u6,
		x.u7,
		x.u8,
		x.u9,
		x.u10,
		x.u11,
		x.u12,
		x.u13,
		x.u14,
		x.u15,
		x.u16,
		x.u17,
		x.u18,
		x.u19,
		x.u20,
		x.u21,
		x.u22,
		x.u23,
		x.u24,
		x.u25,
		x.u26,
		x.u27,
		x.u28,
		x.u29,
		x.u30,
		x.u31,
	)
}

// String returns the base-10 representation of x.
func (x Uint2048) String() string {
	b := make([]byte, 617)
	i := len(b)
	for x.cmp64(10) >= 0 {
		q, r := x.quoRem64(10)
		i--
		b[i] = byte(r + '0')
		x = q
	}
	i--
	b[i] = byte(x.u0 + '0')
	return string(b[i:])
}

// ParseUint2048 returns the value of s in the given base.
func ParseUint2048(s string, base int) (Uint2048, error) {
	x, _, _, err := parseUint[Uint2048](s, base, false)
	return x, err
}
